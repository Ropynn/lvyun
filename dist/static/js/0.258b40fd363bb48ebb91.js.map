{"version":3,"sources":["webpack:///static/js/0.258b40fd363bb48ebb91.js","webpack:///./src/components/businessman.vue?b11e","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/config.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/echarts/lib/data/Source.js","webpack:///./~/echarts/lib/data/helper/dataProvider.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/data/helper/sourceType.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/data/helper/dimensionHelper.js","webpack:///./~/echarts/lib/data/helper/sourceHelper.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/stream/task.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/graphic/helper/image.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/chart/helper/createRenderPlanner.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/OrdinalMeta.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/data/helper/createDimensions.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/model/referHelper.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/zrender/lib/graphic/helper/fixShadow.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/text.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./~/vux/src/components/grid/grid-item.vue","webpack:///./~/vux/src/components/grid/grid.vue","webpack:///./~/vux/src/components/group-title/index.vue","webpack:///./src/components/businessman.vue","webpack:///./~/vux/src/components/grid/grid.vue?f387","webpack:///./~/vux/src/components/group-title/index.vue?3f9f","webpack:///./src/components/businessman.vue?d9fd","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/chart/helper/labelHelper.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js","webpack:///./~/echarts/lib/component/gridSimple.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/legend.js","webpack:///./~/echarts/lib/component/legend/LegendModel.js","webpack:///./~/echarts/lib/component/legend/LegendView.js","webpack:///./~/echarts/lib/component/legend/legendAction.js","webpack:///./~/echarts/lib/component/legend/legendFilter.js","webpack:///./~/echarts/lib/component/title.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/geo/Region.js","webpack:///./~/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/export.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/lang.js","webpack:///./~/echarts/lib/layout/barGrid.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/dataFormat.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/stream/Scheduler.js","webpack:///./~/echarts/lib/theme/dark.js","webpack:///./~/echarts/lib/theme/light.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/visual/aria.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./~/vux/src/components/grid/grid.vue?7775","webpack:///./~/vux/src/components/group-title/index.vue?7c9f","webpack:///./src/components/businessman.vue?addd","webpack:///./~/vux/src/components/grid/grid-item.vue?9914","webpack:///./~/vux/src/components/grid/grid.vue?2f68","webpack:///./~/vux/src/components/group-title/index.vue?6521","webpack:///./src/components/businessman.vue?4183","webpack:///./~/vux/src/components/grid/grid-item.vue?d7ce","webpack:///./~/vux/src/components/grid/grid.vue?0586","webpack:///./~/vux/src/components/group-title/index.vue?5713","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/polygon.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/IncrementalDisplayable.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","$override","name","fn","_ctx","methods","clone","source","result","typeStr","objToString","call","isPrimitive","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","createCanvas","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","isTypedArray","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","trim","str","replace","setAsPrimitive","primitiveKey","HashMap","visit","isArr","thisMap","set","createHashMap","concatArray","a","b","newArray","offset","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","document","createElement","get","removeKey","normalizeToArray","defaultEmphasis","opt","subOpts","emphasis","subOptName","getDataItemValue","dataItem","Date","isDataItemOption","mappingToExists","exists","newCptOptions","zrUtil","index","exist","cptOption","option","id","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","DEFAULT_COMPONENT_NAME","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","dataIndex","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","makeInner","innerUniqueIndex","Math","random","toFixed","hostObj","parseFinder","ecModel","finder","defaultMainType","has","parsedKey","match","mainType","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","setAttribute","dom","getAttribute","TEXT_STYLE_OPTIONS","extendShape","opts","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","ZImage","style","image","x","y","width","height","onload","img","setStyle","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","max","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","parent","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","Image","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","min","mergePath","global","dev","window","__DEV__","createRegisterEventWithLowercaseName","method","eventName","handler","Eventful","MessageCenter","ECharts","theme","prioritySortFunc","__prio","themeStorage","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","api","_api","createExtensionAPI","_scheduler","Scheduler","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","_onframe","doConvertPixel","methodName","_model","coordSysList","getCoordinateSystems","modelUtil","coordSys","prepare","ecIns","scheduler","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","callView","view","__alive","__model","query","eachComponent","model","__viewId","refresh","needPrepare","silent","IN_MAIN_PROCESS","updateMethods","update","flushPendingActions","triggerUpdatedEvent","updateStreamModes","chartsMap","eachSeries","seriesModel","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","parseClassType","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","trigger","pendingActions","shift","doPrepare","viewId","viewMap","classType","isComponent","ComponentView","getClass","ChartView","viewList","add","__id","__ecComponentInfo","componentIndex","componentType","renderTask","dispose","remove","splice","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","clearColorPalette","render","renderComponents","chart","renderSeries","dirtyList","componentView","componentModel","updateZ","dirtyMap","unfinished","chartView","updatePayload","uid","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","aria","performPostUpdateFuncs","postUpdateFuncs","storage","elCount","env","node","blendMode","blend","eachPendingDisplayable","displayable","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processor","normalizeRegister","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","PRIORITY_VISUAL_LAYOUT","registerVisual","visualTask","PRIORITY_VISUAL_CHART","targetList","defaultPriority","visualType","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","GlobalModel","OptionManager","graphic","_throttle","seriesColor","loadingDefault","lightTheme","darkTheme","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","_disposed","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getZr","setOption","notMerge","lazyUpdate","optionManager","setTheme","console","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","getDisplayList","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","component","ignore","url","getType","toDataURL","getConnectedDataURL","left","Infinity","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","coordinateSystem","containPoint","getVisual","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","stringify","colorStops","background","updateTransform","componentDirtyList","seriesDirtyMap","setDirty","updateView","markUpdateMethod","updateVisual","updateLayout","_loadingFX","resetOption","showLoading","cfg","hideLoading","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","eveName","dataModel","getDataParams","dataType","eventData","clear","disconnect","dataTool","version","___ec_export","out","ArrayCtor","copy","v","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","_trim","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","NaN","precision","returnStr","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","floor","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","parseDate","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","MAX_SAFE_INTEGER","wx","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","userAgent","_default","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","getTooltipMarker","extraCssText","formatTime","isUTC","date","numberUtil","utc","M","h","s2d","capitalFirst","substr","textContain","varName","truncateText","getTextRect","Model","doGet","pathArr","getParent","getParentMethod","inner","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","formatUtil","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","mergeLayoutParam","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","getLayoutParams","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","getDependencies","deps","getClassesByMainType","Clazz","unshift","componentUtil","enableClassManagement","boxLayoutMixin","defaultOption","dependentModels","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","proto","ExtendedClass","superCall","superApply","Clz","classAttr","classBase","isInstance","entity","options","makeContainer","container","IS_CONTAINER","registerClass","componentMainType","throwWhenNotFound","o","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getNeedCrossZero","isBaseAxisAndHasBarSeries","getSeriesByType","getBaseAxis","axis","adjustedScale","adjustScaleForOverflow","axisExtent","axisLength","barWidthAndOffset","calBarWidthAndOffset","isSeriesFiltered","baseAxisKey","dim","barsOnCurrentAxis","undefined","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getOrdinalMeta","IntervalScale","Scale","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","font","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","cos","sin","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","_barGrid","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","Source","fromDataset","sourceFormat","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","seriesLayoutBy","SERIES_LAYOUT_BY_COLUMN","dimensionsDefine","encodeDefine","startIndex","dimensionsDetectCount","_sourceType","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_TYPED_ARRAY","seriesDataToSource","DefaultDataProvider","dimSize","_source","_data","_offset","_dimSize","providerMethods","SOURCE_FORMAT_ARRAY_ROWS","countSimply","getItemSimply","appendDataSimply","newData","getRawValueSimply","dimIndex","dimName","getDimValueSimply","converDataValue","_dimensionInfos","dimInfo","dimType","ordinalMeta","parseAndCollect","retrieveRawValue","getRawDataItem","getProvider","getSource","getDimensionInfo","rawValueGetters","retrieveRawAttr","SOURCE_FORMAT_OBJECT_ROWS","providerProto","pure","persistent","arrayRows_column","getItem","arrayRows_row","row","objectRows","keyedColumns","col","dims","newCol","oldCol","original","typedArray","clean","arrayRows","defaultDimValueGetters","_rawData","hasItemOption","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","SERIES_LAYOUT_BY_ROW","setting","_setting","_extent","_interval","clazzUtil","getSetting","unionExtent","unionExtentFromData","getApproximateExtent","start","end","thisExtent","_isBlank","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","beforeBrush","proxySymbol","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","radius","toStatic","lineDashSum","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","progressive","incremental","inplace","afterBrush","rectContain","coord","animateStyle","useStyle","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","summarizeDimensions","summary","coordDimMap","defaultedLabel","dimItem","coordDim","coordDimArr","coordDimIndex","isSysCoord","mayLabelDimType","OTHER_DIMENSIONS","otherDim","otherDimArr","otherDims","dataDimsOnCoord","encodeLabel","defaultedTooltip","encodeTooltip","tooltip","getDimensionTypeByAxis","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","sourceHeader","getDatasetModel","datasetOption","completeResult","completeBySourceData","makeDefaultEncode","normalizeDimensionsDefine","findPotentialName","arrayRowsTravelFirst","objectRowsCollectDimensions","colArr","potentialNameDimIndex","nameMap","displayName","maxLoop","firstIndex","coordSysDefine","getCoordSysDefineBySeries","encodeItemName","encodeSeriesName","seriesType","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","datasetIndex","guessOrdinal","detectValue","sample","_referHelper","excludes","includes","propName","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","createTask","define","Task","_reset","reset","_plan","_count","_onDirty","onDirty","_dirty","taskIns","skip","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","taskProto","performArgs","upTask","_upstream","outputData","__pipeline","currentTask","planResult","outputDueEnd","pipe","downTask","getUpstream","getDownstream","setOutputEnd","delay","debounce","lastExec","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Gradient","addColorStop","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","chartInstance","echartsAPIList","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","_symbol","_labelHelper","getDefaultLabel","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","hostModel","_updateCommon","fadeIn","opacity","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","getLabelDefaultText","useNameLabel","getName","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","itemModel","getItemModel","getItemStyle","elStyle","symbolInnerColor","onEmphasis","ratio","onNormal","fadeOut","keepLabel","createListFromArray","coordSysDimDefs","coordSysName","registeredCoordSys","axisMap","stackable","isStackable","hasNameEncode","dimInfoList","createDimensions","coordDimensions","categoryAxisModel","List","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","defaultDimValueGetter","initData","sampleItem","firstDataNotNull","_dimensionHelper","pipelineContext","originalLarge","large","originalIncremental","incrementalRender","getItemGraphicEl","getTooltipPosition","dataToPoint","getValues","mapDimension","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","formatter","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","getTextColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","viewWidth","viewHeight","seriesDataIndices","axisHelper","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","decomposeTransform","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","axisPointerClazz","registerAxisPointerClass","gridModel","grid","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","getLabelInterval","fixExtentWithBands","nTick","normalizedExtent","Axis","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","isHorizontal","getRotate","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","getIndicesCtor","CtorUint32Array","globalObj","Uint32Array","UNDEFINED","CtorUint16Array","Uint16Array","_rawCount","cloneChunk","originalChunk","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","getRawIndexWithoutIndices","getRawIndexWithIndices","_indices","getId","rawIndex","_idList","_getIdFromStore","ID_PREFIX","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","_storage","originalStorage","cloneDimStore","originalDimStore","newDimStore","DataDiffer","_dataProvider","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","_nameList","_optionModels","_visual","_layout","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_approximateExtent","_dimensionsSummary","listProto","getDimension","getDimensionsOnCoord","nameList","_nameRepeatCount","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","chunkSize","dimensionInfoMap","idList","rawExtent","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","_idDimIdx","DataCtor","resizeChunkArray","newStore","chunkIndex","chunkOffset","dimStorage","_getNameFromStore","categories","chunk","idDimIdx","getIndices","buffer","getRawIndex","chunkStore","stackedValue","_getFast","rawIdx","getDataExtent","dimData","initialExtent","isStacked","dimExtent","currEnd","cacheName","useRaw","setApproximateExtent","concreteDim","getSum","indices","rawDataIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","filterSelf","newIndices","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","dimStore","downSample","dimension","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","OrdinalMeta","_needCollect","needCollect","_deduplication","deduplication","_map","getOrCreateMap","createByAxisModel","dedplication","getOrdinal","category","completeDimensions","sysDims","applyDim","resultItem","coordDimNameMap","dimsDef","encodeDef","dataDimNameMap","dimCount","getDimCount","dimDefItem","userDimName","dataDims","validDataDims","resultDimIdx","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","extra","extraPrefix","genName","extraFromZero","isExtraCoord","fromZero","_sourceHelper","dimensionsCount","isNotTargetSeries","seiresIndex","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","_seriesIndicesMap","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMixin","_optionManager","optionChanged","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeries","eachSeriesByType","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","componentTypes","autoSeriesName","getSeriesAutoName","getRawData","nameArr","dataTaskCount","dataTaskReset","dataTaskProgress","wrapData","onDataSelfChange","task","getCurrentTask","pipeline","getPipeline","agentStubMap","_format","dataFormatMixin","_task","legendDataProvider","visualColorAccessPath","dataTask","getInitialData","dataBeforeProcessed","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","isOverallFilter","formatTooltip","multipleSeries","formatSingleValue","tooltipDims","tooltipDimLen","getRawValue","isValueArr","formattedValue","setEachItem","dimHead","valStr","vertially","colorEl","animationEnabled","getColorFromPalette","requestColorNum","coordDimToDataDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","pipeTask","preventIncremental","getNearestColorPalette","paletteNum","colorIdx","colorNameMap","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","fetch","fetchers","isCategory","cartesian2d","xAxisModel","yAxisModel","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","parallelModel","parallelAxisIndex","axisIndex","fixExtent","Chart","renderTaskPlan","renderTaskReset","elSetState","state","toggleHighlight","renderPlanner","incrementalPrepareRender","renderTaskProgress","createRenderPlanner","chartProto","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","normalizeRadian","PI2","windingLine","dir","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","idStart","_image","sWidth","sHeight","drawImage","repeat","createPattern","createLinearGradient","createRadialGradient","fixShadow","STYLE_COMMON_PROPS","transformText","textOrigin","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","orignalBrush","modified","clipPaths","shadowTemp","SHADOW_PROPS","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","r1","r2","r3","r4","total","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","ZRender","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0__libs_router__","created","$parent","countColumn","mounted","$slots","icon","hasIconSlot","hasLabelSlot","destroyed","computed","column","styles","onClick","$emit","link","$router","childrenSize","$children","rows","validator","cols","__WEBPACK_IMPORTED_MODULE_0_vux_src_components_grid_grid_vue__","__WEBPACK_IMPORTED_MODULE_0_vux_src_components_grid_grid_vue___default","__WEBPACK_IMPORTED_MODULE_1_vux_src_components_grid_grid_item_vue__","__WEBPACK_IMPORTED_MODULE_1_vux_src_components_grid_grid_item_vue___default","__WEBPACK_IMPORTED_MODULE_2_vux_src_components_group_title_index_vue__","__WEBPACK_IMPORTED_MODULE_2_vux_src_components_group_title_index_vue___default","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_echarts__","__WEBPACK_IMPORTED_MODULE_3_echarts_lib_echarts___default","__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__","__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_tooltip__","__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_title__","__WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_legend__","format","Grid","GridItem","GroupTitle","user","allInfo","allMoney","_this","axios","then","statu","location","drawLine","getElementById","legend","calculable","xAxis","yAxis","sources","mappings","file","sourcesContent","sourceRoot","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","makeSeriesScope","symbolDrawProto","oldData","SymbolCtor","newIdx","symbolEl","oldIdx","execute","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","labelDims","vals","visualSymbol","layoutPoints","dataSample","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","valueCoordDim","baseDataOffset","valueDim","stackedOnSameSign","stackedData","createGridClipShape","cartesian","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","lineAnimationDiff","_poly","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","categoryAxis","getAxesByScale","isLabelIgnored","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","axisTrigger","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","globalListener","AxisPointerView","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getCartesian","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","boxLayoutParams","getBoxLayoutParams","viewportSize","layoutBox","makeBackground","legendFilter","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","potentialData","availableNames","potentialSeriesName","_availableNames","unSelect","toggleSelected","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_listComponent","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","legendSymbolType","itemGroup","_createItem","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","legendModels","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","sublink","open","groupRect","layoutOption","alignStyle","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","clientWidth","clientHeight","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","axisDefault","timeAxis","logAxis","logBase","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","__ordinalMeta","Axis2D","coordExtent","toLocalCoord","dimAxisMapper","_axes","Cartesian","_dimList","addAxis","_dataCoordConvert","input","dimList","output","Cartesian2D","axisX","axisY","reserved","clampData","xAxisExtent","yAxisExtent","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","unrotatedSingleRect","singleRect","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransform","coordBase","axisExtentSum","findAxesModels","axesTypes","isCartesian2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","axesModels","grids","containLabel","Region","geometries","cp","polygonContain","MAX_NUMBER","exterior","loopGeo","interiors","transformTo","decode","json","UTF8Encoding","encodeScale","UTF8Scale","feature","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","featureObj","region","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","util","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","_createDimensions","toolbox","title","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","tiled","restore","saveAsImage","typeNames","pie","scatter","effectScatter","radar","tree","treemap","boxplot","candlestick","heatmap","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","allData","partialData","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","valueAxisStart","coordDims","lastCoord","lastCoordOrigin","progress","segCount","isLargeRender","dimLen","tmpIn","tmpOut","maskColor","mask","labelRect","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","gradientColor","animationDuration","progressiveThreshold","useUTC","makeStyleMapper","DIMENSION_LABEL_REG","rawValue","componentSubType","marker","labelProp","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","graphicUtil","PATH_COLOR","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","compatEC2ItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","normal","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOpt","compatEC3CommonStyles","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","toArr","toObj","axisOpt","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radarOpt","geoOpt","regions","regionObj","toolboxOpt","featureOpt","sampler","samplers","indexSampler","average","nearest","fixRoundingError","originalVal","roundingErrorFix","scaleProto","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","_ordinalMeta","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","performRawSeries","createSeriesStageTask","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","getTargetSeries","createOnAllSeries","pipelineMap","_pipelineMap","createOverallStageTask","createStub","stubReset","stubOnDirty","overallProgress","agent","__block","overallTaskReset","overallReset","upstreamContext","stubProgress","resetDefines","seriesTaskProgress","resetDefine","dataEach","__idxInPipeline","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","_component","pCtx","progressiveEnabled","bockIndex","dataLen","threshold","stageTaskMap","cond","axisCommon","iconStyle","controlStyle","color0","borderColor0","colorAll","colorLayer","componentProto","keyValues","RegExp","getConfig","userConfig","ariaModel","getSeriesTypeName","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","colorAccessPath","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","hasCallback","locals","_vm","$createElement","_c","_self","staticClass","attrs","href","click","alt","_e","_v","domProps","_s","staticRenderFns","headimgurl","nickname","nPerson","nOrder","nAdminer","aPerson","aOrder","aAdminer","investo","partner","owner","_m","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","SILENT","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","setHandlerProxy","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__used","__drawIndex","__startIndex","__endIndex","getElementCount","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","parseInt10","isLayerValid","__builtin__","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","_domRoot","_getSize","_hoverlayer","_hoverElements","viewportRoot","paintAll","_redrawId","_paintList","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","eachBuiltinLayer","virtual","layerList","zi","useTimer","now","firstEl","notClear","error","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","incrementalLayerCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","_curve","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","handlerDomProxyProto","paths","_updatePathDirty","IncrementalDisplayble","Displayble","_displayables","_temporaryDisplayables","_cursor","clearDisplaybles","addDisplayable","notPersistent","addDisplayables","displayables","globalCoord","textHelper","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","v2Add","interpolate","segs","w2","w3","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","pointAt","tangentAt","polyHelper","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","nPoint","mathAtan2"],"mappings":"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","file":"static/js/0.258b40fd363bb48ebb91.js","sourcesContent":["webpackJsonp([0],Array(289).concat([\n/* 289 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(500)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(392),\n  /* template */\n  __webpack_require__(522),\n  /* scopeId */\n  \"data-v-96fcf3be\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 290 */,\n/* 291 */,\n/* 292 */,\n/* 293 */,\n/* 294 */,\n/* 295 */,\n/* 296 */,\n/* 297 */,\n/* 298 */,\n/* 299 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n/***/ }),\n/* 300 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * name may be displayed on screen, so use '-'.\n * But we should make sure it is not duplicated\n * with user specified name, so use '\\0';\n */\n\nvar DEFAULT_COMPONENT_NAME = '\\0-';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : DEFAULT_COMPONENT_NAME;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.DEFAULT_COMPONENT_NAME = DEFAULT_COMPONENT_NAME;\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n/***/ }),\n/* 301 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar pathTool = __webpack_require__(565);\n\nvar colorTool = __webpack_require__(322);\n\nvar matrix = __webpack_require__(317);\n\nvar vector = __webpack_require__(304);\n\nvar Path = __webpack_require__(307);\n\nvar Transformable = __webpack_require__(384);\n\nvar ZImage = __webpack_require__(376);\n\nexports.Image = ZImage;\n\nvar Group = __webpack_require__(330);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(550);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(556);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(562);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(561);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(558);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(559);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(560);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(557);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(555);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(554);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(546);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(548);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(549);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(308);\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = __webpack_require__(547);\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n/* 302 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ }),\n/* 303 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(385);\n\nvar zrUtil = __webpack_require__(299);\n\nvar colorTool = __webpack_require__(322);\n\nvar env = __webpack_require__(306);\n\nvar timsort = __webpack_require__(340);\n\nvar Eventful = __webpack_require__(321);\n\nvar GlobalModel = __webpack_require__(360);\n\nvar ExtensionAPI = __webpack_require__(343);\n\nvar CoordinateSystemManager = __webpack_require__(333);\n\nvar OptionManager = __webpack_require__(467);\n\nvar backwardCompat = __webpack_require__(475);\n\nvar ComponentModel = __webpack_require__(312);\n\nvar SeriesModel = __webpack_require__(361);\n\nvar ComponentView = __webpack_require__(484);\n\nvar ChartView = __webpack_require__(365);\n\nvar graphic = __webpack_require__(301);\n\nvar modelUtil = __webpack_require__(300);\n\nvar _throttle = __webpack_require__(339);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(486);\n\nvar aria = __webpack_require__(485);\n\nvar loadingDefault = __webpack_require__(466);\n\nvar Scheduler = __webpack_require__(481);\n\nvar lightTheme = __webpack_require__(483);\n\nvar darkTheme = __webpack_require__(482);\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.2';\nvar dependencies = {\n  zrender: '4.0.1'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // this._scheduler = new Scheduler();\n  // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(visualFuncs, ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished);\n\n      if (!scheduler.unfinished) {\n        this._zr && this._zr.flush();\n        this.trigger('finished');\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel);\n    stackSeriesData(ecModel);\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(visualFuncs, ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks(dataProcessorFuncs);\n  scheduler.prepareStageTasks(visualFuncs);\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  refresh(this, optionChanged, opts && opts.silent);\n};\n\nfunction refresh(ecIns, needPrepare, silent) {\n  ecIns[IN_MAIN_PROCESS] = true;\n  needPrepare && prepare(ecIns);\n  updateMethods.update.call(ecIns);\n  ecIns[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(ecIns, silent);\n  triggerUpdatedEvent.call(ecIns, silent);\n}\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params);\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(461);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n/* 304 */\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n/* 305 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n/* 306 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 307 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(332);\n\nvar zrUtil = __webpack_require__(299);\n\nvar PathProxy = __webpack_require__(331);\n\nvar pathContain = __webpack_require__(541);\n\nvar Pattern = __webpack_require__(377);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n/* 308 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(304);\n\nvar matrix = __webpack_require__(317);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n/* 309 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar textContain = __webpack_require__(315);\n\nvar numberUtil = __webpack_require__(305);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n/* 310 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar env = __webpack_require__(306);\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = __webpack_require__(313);\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = __webpack_require__(473);\n\nvar areaStyleMixin = __webpack_require__(469);\n\nvar textStyleMixin = __webpack_require__(474);\n\nvar itemStyleMixin = __webpack_require__(472);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n/* 311 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar BoundingRect = __webpack_require__(308);\n\nvar _number = __webpack_require__(305);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(309);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n/* 312 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Model = __webpack_require__(310);\n\nvar componentUtil = __webpack_require__(326);\n\nvar _clazz = __webpack_require__(313);\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\n\nvar layout = __webpack_require__(311);\n\nvar boxLayoutMixin = __webpack_require__(470);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 313 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(299);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n/* 314 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(299);\n\nvar textContain = __webpack_require__(315);\n\nvar OrdinalScale = __webpack_require__(479);\n\nvar IntervalScale = __webpack_require__(337);\n\nvar Scale = __webpack_require__(325);\n\nvar numberUtil = __webpack_require__(305);\n\nvar _barGrid = __webpack_require__(464);\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\n__webpack_require__(480);\n\n__webpack_require__(478);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel) {\n    var isBaseAxisAndHasBarSeries = zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n      return seriesModel.getBaseAxis() === model.axis;\n    }).length > 0;\n\n    if ((scaleType === 'time' || scaleType === 'interval') && isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model) {\n  var ecModel = model.ecModel; // Get Axis Length\n\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  })); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  var totalOverFlow = Math.abs(minOverflow) + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.adjustScaleForOverflow = adjustScaleForOverflow;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n/* 315 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(308);\n\nvar imageHelper = __webpack_require__(342);\n\nvar _util = __webpack_require__(299);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n/* 316 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(304);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n/* 317 */\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n/***/ }),\n/* 318 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = __webpack_require__(313);\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = __webpack_require__(324);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n/***/ }),\n/* 319 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(299);\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = __webpack_require__(300);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = __webpack_require__(305);\n\nvar parseDate = _number.parseDate;\n\nvar Source = __webpack_require__(318);\n\nvar _sourceType = __webpack_require__(324);\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n/***/ }),\n/* 320 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(321);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(306);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n/* 321 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n/* 322 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(372);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n/* 323 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Model = __webpack_require__(310);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n/* 324 */\n/***/ (function(module, exports) {\n\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n/***/ }),\n/* 325 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(313);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n/* 326 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar _clazz = __webpack_require__(313);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n/* 327 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar graphic = __webpack_require__(301);\n\nvar BoundingRect = __webpack_require__(308);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n/* 328 */,\n/* 329 */\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n/* 330 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Element = __webpack_require__(367);\n\nvar BoundingRect = __webpack_require__(308);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n/* 331 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(316);\n\nvar vec2 = __webpack_require__(304);\n\nvar bbox = __webpack_require__(373);\n\nvar BoundingRect = __webpack_require__(308);\n\nvar _config = __webpack_require__(329);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 332 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Style = __webpack_require__(378);\n\nvar Element = __webpack_require__(367);\n\nvar RectText = __webpack_require__(553);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n/* 333 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 334 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var coordDimMap = summary.coordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (dimItem.isSysCoord && mayLabelDimType(dimItem.type)) {\n        // Use the last coord dim (and label friendly) as default label,\n        // because both show x, y on label is not look good, and usually\n        // y axis is more focusd conventionally.\n        defaultedLabel[0] = dimName;\n      }\n\n      coordDimMap.set(coordDim, 1);\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  coordDimMap.each(function (v, coordDim) {\n    dataDimsOnCoord = dataDimsOnCoord.concat(encode[coordDim]);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n/***/ }),\n/* 335 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = __webpack_require__(363);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = __webpack_require__(299);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = __webpack_require__(318);\n\nvar _sourceType = __webpack_require__(324);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n/***/ }),\n/* 336 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 337 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(305);\n\nvar formatUtil = __webpack_require__(309);\n\nvar Scale = __webpack_require__(325);\n\nvar helper = __webpack_require__(364);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 338 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar assert = _util.assert;\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && start < end && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  taskIns._progress = !skip && taskIns._reset && taskIns._reset(taskIns.context);\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n};\n\nexports.createTask = createTask;\n\n/***/ }),\n/* 339 */\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n/* 340 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n/* 341 */\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 342 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(372);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n/* 343 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n/* 344 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar _symbol = __webpack_require__(327);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(301);\n\nvar _number = __webpack_require__(305);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(425);\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n/* 345 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar List = __webpack_require__(356);\n\nvar createDimensions = __webpack_require__(359);\n\nvar _sourceType = __webpack_require__(324);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = __webpack_require__(334);\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = __webpack_require__(300);\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = __webpack_require__(333);\n\nvar _referHelper = __webpack_require__(363);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = __webpack_require__(318);\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n */\nfunction createListFromArray(source, seriesModel) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType);\n        dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var list = new List(dimInfoList, seriesModel);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n/* 346 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalIncremental = fields.incrementalRender;\n    var large = fields.large = pipelineContext.large;\n    var incremental = fields.incrementalRender = pipelineContext.incrementalRender;\n    return (originalLarge ^ large || originalIncremental ^ incremental) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 347 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar modelUtil = __webpack_require__(300);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 348 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar env = __webpack_require__(306);\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n/* 349 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar graphic = __webpack_require__(301);\n\nvar textContain = __webpack_require__(315);\n\nvar formatUtil = __webpack_require__(309);\n\nvar matrix = __webpack_require__(317);\n\nvar axisHelper = __webpack_require__(314);\n\nvar AxisBuilder = __webpack_require__(350);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n/* 350 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(309);\n\nvar graphic = __webpack_require__(301);\n\nvar Model = __webpack_require__(310);\n\nvar _number = __webpack_require__(305);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(327);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(317);\n\nvar _vector = __webpack_require__(304);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n/* 351 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(303);\n\nvar axisPointerModelHelper = __webpack_require__(323);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n/* 352 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n/* 353 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar numberUtil = __webpack_require__(305);\n\nvar axisHelper = __webpack_require__(314);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n/* 354 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar axisHelper = __webpack_require__(314);\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 355 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar ComponentModel = __webpack_require__(312);\n\nvar axisModelCreator = __webpack_require__(452);\n\nvar axisModelCommonMixin = __webpack_require__(354);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 356 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(299);\n\nvar Model = __webpack_require__(310);\n\nvar DataDiffer = __webpack_require__(460);\n\nvar Source = __webpack_require__(318);\n\nvar _dataProvider = __webpack_require__(319);\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = __webpack_require__(334);\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\n\nfunction getIndicesCtor(list) {\n  var CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\n  var CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array; // The possible max value in this._indicies is always this._rawCount despite of filtering.\n\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is float64\n        type: 'float'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'float';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number|Array} [idx=0] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array.\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dims = this._dimensionsSummary.encode[coordDim];\n  return idx === true ? dims && dims.slice() || [] : dims ? dims[idx || 0] : null;\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = [Infinity, -Infinity];\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n}; // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n}; // FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n// Hack a much simpler _getFast\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim, stack) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = [Infinity, -Infinity];\n  stack = (stack || false) && this.isStacked(dim);\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count();\n  var cacheName = [dim, !!stack].join('_'); // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices && !stack;\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[cacheName];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[cacheName] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim, stack) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim, stack);\n};\n\nlistProto.setApproximateExtent = function (extent, dim, stack) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n\nlistProto.isStacked = function (concreteDim) {\n  var dimensionInfo = this._dimensionInfos[concreteDim];\n  return dimensionInfo && dimensionInfo.stackable && this.stackedOn;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var chunkSize = this._chunkSize;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var chunkIndex = Math.floor(i / chunkSize);\n      var chunkOffset = i % chunkSize;\n\n      if (dimData[chunkIndex][chunkOffset] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n  context = context || this;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  stack = stack || false;\n  context = context || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIdx);\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = stack ? this.get(dimensions[k], i, true) : this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range, stack) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  stack = stack || false;\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices && !stack) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n\n          if (val >= min && val <= max) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i];\n\n          if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      stack = stack || this.isStacked(dim0);\n\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n        var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n          var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      storage[dim] = zrUtil.indexOf(excludeDimensions, dim) >= 0 ? cloneDimStore(originalStorage[dim]) // Direct reference for other dimensions\n      : originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex, stack);\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = retValue[i];\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ }),\n/* 357 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n/***/ }),\n/* 358 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = __webpack_require__(300);\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = __webpack_require__(335);\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = __webpack_require__(318);\n\nvar _dimensionHelper = __webpack_require__(334);\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] can be specified to give names.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      isSysCoord: boolean True if the coord is from sys dimension.\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      resultItem.isSysCoord = true; // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n\n\nfunction getDimCount(source, sysDims, dimsDef, dimCount) {\n  if (dimCount == null) {\n    dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  }\n\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n/* 359 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar completeDimensions = __webpack_require__(358);\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.extraPrefix]\n * @param {boolean} [opt.extraFromZero]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    extraPrefix: opt.extraPrefix,\n    extraFromZero: opt.extraFromZero\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 360 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(299);\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = __webpack_require__(300);\n\nvar Model = __webpack_require__(310);\n\nvar ComponentModel = __webpack_require__(312);\n\nvar globalDefault = __webpack_require__(468);\n\nvar colorPaletteMixin = __webpack_require__(362);\n\nvar _sourceHelper = __webpack_require__(335);\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 361 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(299);\n\nvar env = __webpack_require__(306);\n\nvar _format = __webpack_require__(309);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = __webpack_require__(300);\n\nvar ComponentModel = __webpack_require__(312);\n\nvar colorPaletteMixin = __webpack_require__(362);\n\nvar dataFormatMixin = __webpack_require__(471);\n\nvar _layout = __webpack_require__(311);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = __webpack_require__(338);\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = __webpack_require__(335);\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = __webpack_require__(319);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (seriesName === modelUtil.DEFAULT_COMPONENT_NAME) {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (modelUtil.DEFAULT_COMPONENT_NAME === name) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 362 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 363 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(299);\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n/***/ }),\n/* 364 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(305);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n/* 365 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar each = _util.each;\n\nvar Group = __webpack_require__(330);\n\nvar componentUtil = __webpack_require__(326);\n\nvar clazzUtil = __webpack_require__(313);\n\nvar modelUtil = __webpack_require__(300);\n\nvar _task = __webpack_require__(338);\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = __webpack_require__(346);\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var incremental = seriesModel.pipelineContext.incrementalRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = incremental && view.incrementalPrepareRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n  view[methodName](seriesModel, ecModel, api, payload);\n  return incremental ? renderTaskProgress : null;\n}\n\nfunction renderTaskProgress(params, context) {\n  context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n}\n\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n/* 366 */,\n/* 367 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(374);\n\nvar Eventful = __webpack_require__(321);\n\nvar Transformable = __webpack_require__(384);\n\nvar Animatable = __webpack_require__(563);\n\nvar zrUtil = __webpack_require__(299);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n/* 368 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(536);\n\nvar color = __webpack_require__(322);\n\nvar _util = __webpack_require__(299);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n/* 369 */\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n/* 370 */\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n/* 371 */\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n/* 372 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n/* 373 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(304);\n\nvar curve = __webpack_require__(316);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n/* 374 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 375 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(329);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n/* 376 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(332);\n\nvar BoundingRect = __webpack_require__(308);\n\nvar zrUtil = __webpack_require__(299);\n\nvar imageHelper = __webpack_require__(342);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 377 */\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n/* 378 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar fixShadow = __webpack_require__(380);\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n/* 379 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(306);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 380 */\n/***/ (function(module, exports) {\n\nvar SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 381 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(552);\n\nvar smoothBezier = __webpack_require__(551);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 382 */\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 383 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(315);\n\nvar roundRectHelper = __webpack_require__(382);\n\nvar imageHelper = __webpack_require__(342);\n\nvar fixShadow = __webpack_require__(380);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n/* 384 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(317);\n\nvar vector = __webpack_require__(304);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n/* 385 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(374);\n\nvar env = __webpack_require__(306);\n\nvar zrUtil = __webpack_require__(299);\n\nvar Handler = __webpack_require__(531);\n\nvar Storage = __webpack_require__(534);\n\nvar Painter = __webpack_require__(533);\n\nvar Animation = __webpack_require__(535);\n\nvar HandlerProxy = __webpack_require__(545);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.1';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n/* 386 */,\n/* 387 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__libs_router__ = __webpack_require__(18);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'grid-item',\n  props: ['icon', 'label', 'link'],\n  created: function created() {\n    this.$parent.countColumn();\n  },\n  mounted: function mounted() {\n    this.$slots.icon && (this.hasIconSlot = true);\n    this.$slots.label && (this.hasLabelSlot = true);\n  },\n  destroyed: function destroyed() {\n    this.$parent.countColumn();\n  },\n\n  computed: {\n    style: function style() {\n      var column = this.$parent.column;\n      if (!column || column === 3) {\n        return;\n      }\n      var styles = {};\n      styles.width = 100 / column + '%';\n      return styles;\n    }\n  },\n  methods: {\n    onClick: function onClick() {\n      this.$emit('on-item-click');\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__libs_router__[\"a\" /* go */])(this.link, this.$router);\n    }\n  },\n  data: function data() {\n    return {\n      hasIconSlot: false,\n      hasLabelSlot: false\n    };\n  }\n});\n\n/***/ }),\n/* 388 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'grid',\n  methods: {\n    countColumn: function countColumn() {\n      this.childrenSize = this.$children.length;\n    }\n  },\n  props: {\n    rows: {\n      type: Number,\n      validator: function validator() {\n        if (false) {\n          console.warn('[VUX warn] Grid rows 属性已经废弃，使用 cols 代替。单行列数为自动计算');\n        }\n        return true;\n      }\n    },\n    cols: {\n      type: Number\n    }\n  },\n  computed: {\n    column: function column() {\n      return this.cols || this.childrenSize;\n    }\n  },\n  data: function data() {\n    return {\n      childrenSize: 3\n    };\n  }\n});\n\n/***/ }),\n/* 389 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'group-title'\n});\n\n/***/ }),\n/* 390 */,\n/* 391 */,\n/* 392 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vux_src_components_grid_grid_vue__ = __webpack_require__(527);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vux_src_components_grid_grid_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vux_src_components_grid_grid_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_components_grid_grid_item_vue__ = __webpack_require__(526);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_components_grid_grid_item_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vux_src_components_grid_grid_item_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vux_src_components_group_title_index_vue__ = __webpack_require__(528);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vux_src_components_group_title_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_vux_src_components_group_title_index_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_echarts__ = __webpack_require__(303);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_echarts_lib_echarts___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_echarts_lib_echarts__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__ = __webpack_require__(426);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_echarts_lib_chart_line__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_tooltip__ = __webpack_require__(447);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_tooltip___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_echarts_lib_component_tooltip__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_title__ = __webpack_require__(446);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_title___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_echarts_lib_component_title__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_legend__ = __webpack_require__(441);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_legend___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_echarts_lib_component_legend__);\n\n\n\n\n\nvar format = __webpack_require__(84);\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    Grid: __WEBPACK_IMPORTED_MODULE_0_vux_src_components_grid_grid_vue___default.a,\n    GridItem: __WEBPACK_IMPORTED_MODULE_1_vux_src_components_grid_grid_item_vue___default.a,\n    GroupTitle: __WEBPACK_IMPORTED_MODULE_2_vux_src_components_group_title_index_vue___default.a\n  },\n  data: function data() {\n    return {\n      user: {},\n      allInfo: {},\n      allMoney: {},\n      col: 2,\n      date: [format(new Date() - 6 * 24 * 3600 * 1000, \"MM-DD\"), format(new Date() - 5 * 24 * 3600 * 1000, \"MM-DD\"), format(new Date() - 4 * 24 * 3600 * 1000, \"MM-DD\"), format(new Date() - 3 * 24 * 3600 * 1000, \"MM-DD\"), format(new Date() - 2 * 24 * 3600 * 1000, \"MM-DD\"), format(new Date() - 1 * 24 * 3600 * 1000, \"MM-DD\"), format(new Date(), \"MM-DD\")]\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.axios.get(this.api + \"/wx/getUser\").then(function (res) {\n      if (res.data.statu == 1) {\n\n        _this.user = res.data.user;\n      } else {\n        window.location = _this.api + \"/wx/login?goback=businessman\";\n      }\n    });\n    this.axios.get(this.api + \"/wx/getAllHome\").then(function (res) {\n      console.log(res);\n      _this.allInfo = res.data;\n    });\n    this.axios.get(this.api + \"/wx/getAllMoney\").then(function (res) {\n      console.log(res);\n      _this.allMoney = res.data;\n    });\n  },\n\n  methods: {\n    drawLine: function drawLine() {\n\n      var myChart = __WEBPACK_IMPORTED_MODULE_3_echarts_lib_echarts___default.a.init(document.getElementById(\"myCharts\"));\n\n      myChart.setOption({\n        tooltip: {\n          trigger: \"axis\"\n        },\n        legend: {\n          data: [\"新注册用户\", \"新增订单\", \"新增管理员\"]\n        },\n        textStyle: {\n          fontFamily: \"Arial\",\n          fontSize: \"14px\"\n        },\n        calculable: true,\n        xAxis: [{\n          type: \"category\",\n          boundaryGap: false,\n          data: this.date\n        }],\n        yAxis: [{\n          type: \"value\"\n        }],\n        series: [{\n          name: \"新注册用户\",\n          type: \"line\",\n          smooth: true,\n          stack: \"总量\",\n          data: [120, 132, 101, 134, 90, 230, 210],\n          label: { show: true }\n        }, {\n          name: \"新增订单\",\n          type: \"line\",\n          smooth: true,\n          stack: \"总量\",\n          data: [220, 182, 191, 234, 290, 330, 310],\n          label: { show: true }\n        }, {\n          name: \"新增管理员\",\n          type: \"line\",\n          smooth: true,\n          stack: \"总量\",\n          data: [150, 232, 201, 154, 190, 330, 410],\n          label: { show: true }\n        }]\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.drawLine();\n  }\n});\n\n/***/ }),\n/* 393 */,\n/* 394 */,\n/* 395 */,\n/* 396 */,\n/* 397 */,\n/* 398 */,\n/* 399 */,\n/* 400 */,\n/* 401 */,\n/* 402 */,\n/* 403 */,\n/* 404 */,\n/* 405 */,\n/* 406 */,\n/* 407 */,\n/* 408 */,\n/* 409 */,\n/* 410 */,\n/* 411 */,\n/* 412 */,\n/* 413 */,\n/* 414 */,\n/* 415 */,\n/* 416 */,\n/* 417 */,\n/* 418 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(287)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".weui-grids{position:relative;overflow:hidden}.weui-grids:before{right:0;height:1px;border-top:1px solid #d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-grids:after,.weui-grids:before{content:\\\" \\\";position:absolute;left:0;top:0;color:#d9d9d9}.weui-grids:after{width:1px;bottom:0;border-left:1px solid #d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleX(.5);transform:scaleX(.5)}.weui-grid{position:relative;float:left;padding:20px 10px;width:33.33333333%;box-sizing:border-box}.weui-grid:before{top:0;width:1px;border-right:1px solid #d9d9d9;-webkit-transform-origin:100% 0;transform-origin:100% 0;-webkit-transform:scaleX(.5);transform:scaleX(.5)}.weui-grid:after,.weui-grid:before{content:\\\" \\\";position:absolute;right:0;bottom:0;color:#d9d9d9}.weui-grid:after{left:0;height:1px;border-bottom:1px solid #d9d9d9;-webkit-transform-origin:0 100%;transform-origin:0 100%;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-grid:active{background-color:#ececec}.weui-grid__icon{width:28px;height:28px;margin:0 auto}.weui-grid__icon img{display:block;width:100%;height:100%}.weui-grid__icon+.weui-grid__label{margin-top:5px}.weui-grid__label{display:block;text-align:center;color:#000;font-size:14px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}\", \"\", {\"version\":3,\"sources\":[\"F:/Ropynn/备份/lvyun/node_modules/vux/src/components/grid/grid.vue\"],\"names\":[],\"mappings\":\"AA6GA,YACE,kBAAmB,AACnB,eAAiB,CAClB,AACD,mBAKE,QAAS,AACT,WAAY,AACZ,6BAA8B,AAE9B,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,oBAAuB,CAChC,AACD,qCAbE,YAAa,AACb,kBAAmB,AACnB,OAAQ,AACR,MAAO,AAIP,aAAe,CAmBhB,AAbD,kBAKE,UAAW,AACX,SAAU,AACV,8BAA+B,AAE/B,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,oBAAuB,CAChC,AACD,WACE,kBAAmB,AACnB,WAAY,AACZ,kBAAmB,AACnB,mBAAoB,AACpB,qBAAuB,CACxB,AACD,kBAIE,MAAO,AACP,UAAW,AAEX,+BAAgC,AAEhC,gCAAiC,AACzB,wBAAyB,AACjC,6BAA+B,AACvB,oBAAuB,CAChC,AACD,mCAbE,YAAa,AACb,kBAAmB,AACnB,QAAS,AAGT,SAAU,AAEV,aAAe,CAmBhB,AAbD,iBAGE,OAAQ,AAGR,WAAY,AACZ,gCAAiC,AAEjC,gCAAiC,AACzB,wBAAyB,AACjC,6BAA+B,AACvB,oBAAuB,CAChC,AACD,kBACE,wBAA0B,CAC3B,AACD,iBACE,WAAY,AACZ,YAAa,AACb,aAAe,CAChB,AACD,qBACE,cAAe,AACf,WAAY,AACZ,WAAa,CACd,AACD,mCACE,cAAgB,CACjB,AACD,kBACE,cAAe,AACf,kBAAmB,AACnB,WAAe,AACf,eAAgB,AAChB,mBAAoB,AACpB,uBAAwB,AACxB,eAAiB,CAClB\",\"file\":\"grid.vue\",\"sourcesContent\":[\"/**\\n* actionsheet\\n*/\\n/**\\n* datetime\\n*/\\n/**\\n* tabbar\\n*/\\n/**\\n* tab\\n*/\\n/**\\n* dialog\\n*/\\n/**\\n* x-number\\n*/\\n/**\\n* checkbox\\n*/\\n/**\\n* check-icon\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Mask\\n*/\\n/**\\n* Range\\n*/\\n/**\\n* Tabbar\\n*/\\n/**\\n* Header\\n*/\\n/**\\n* Timeline\\n*/\\n/**\\n* Switch\\n*/\\n/**\\n* Button\\n*/\\n/**\\n* swipeout\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Badge\\n*/\\n/**\\n* Popover\\n*/\\n/**\\n* Button tab\\n*/\\n/* alias */\\n/**\\n* Swiper\\n*/\\n/**\\n* checklist\\n*/\\n/**\\n* popup-picker\\n*/\\n/**\\n* popup\\n*/\\n/**\\n* popup-header\\n*/\\n/**\\n* form-preview\\n*/\\n/**\\n* sticky\\n*/\\n/**\\n* group\\n*/\\n/**\\n* toast\\n*/\\n/**\\n* icon\\n*/\\n/**\\n* calendar\\n*/\\n/**\\n* week-calendar\\n*/\\n/**\\n* search\\n*/\\n/**\\n* radio\\n*/\\n/**\\n* loadmore\\n*/\\n.weui-grids {\\n  position: relative;\\n  overflow: hidden;\\n}\\n.weui-grids:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  height: 1px;\\n  border-top: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-grids:after {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 1px;\\n  bottom: 0;\\n  border-left: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleX(0.5);\\n          transform: scaleX(0.5);\\n}\\n.weui-grid {\\n  position: relative;\\n  float: left;\\n  padding: 20px 10px;\\n  width: 33.33333333%;\\n  box-sizing: border-box;\\n}\\n.weui-grid:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  width: 1px;\\n  bottom: 0;\\n  border-right: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 100% 0;\\n          transform-origin: 100% 0;\\n  -webkit-transform: scaleX(0.5);\\n          transform: scaleX(0.5);\\n}\\n.weui-grid:after {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  height: 1px;\\n  border-bottom: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 100%;\\n          transform-origin: 0 100%;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-grid:active {\\n  background-color: #ECECEC;\\n}\\n.weui-grid__icon {\\n  width: 28px;\\n  height: 28px;\\n  margin: 0 auto;\\n}\\n.weui-grid__icon img {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n}\\n.weui-grid__icon + .weui-grid__label {\\n  margin-top: 5px;\\n}\\n.weui-grid__label {\\n  display: block;\\n  text-align: center;\\n  color: #000000;\\n  font-size: 14px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 419 */,\n/* 420 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(287)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".weui-cell_access{-webkit-tap-highlight-color:rgba(0,0,0,0);color:inherit}.weui-cell_access:active{background-color:#ececec}.weui-cell_access .weui-cell__ft{padding-right:13px;position:relative}.weui-cell_access .weui-cell__ft:after{content:\\\" \\\";display:inline-block;height:6px;width:6px;border-width:2px 2px 0 0;border-color:#c8c8cd;border-style:solid;-webkit-transform:matrix(.71,.71,-.71,.71,0,0);transform:matrix(.71,.71,-.71,.71,0,0);position:relative;top:-2px;position:absolute;top:50%;margin-top:-4px;right:2px}.weui-cell_link{color:#586c94;font-size:14px}.weui-cell_link:first-child:before{display:block}.weui-cell_access.vux-cell-box{padding-right:13px;position:relative}.weui-cell_access.vux-cell-box:after{content:\\\" \\\";display:inline-block;height:6px;width:6px;border-width:2px 2px 0 0;border-color:#c8c8cd;border-style:solid;-webkit-transform:matrix(.71,.71,-.71,.71,0,0);transform:matrix(.71,.71,-.71,.71,0,0);position:relative;top:-2px;position:absolute;top:50%;margin-top:-4px;right:17px}.weui-cells{margin-top:1.17647059em;background-color:#fff;line-height:1.41176471;font-size:17px;overflow:hidden;position:relative}.weui-cells:before{top:0;border-top:1px solid #d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-cells:after,.weui-cells:before{content:\\\" \\\";position:absolute;left:0;right:0;height:1px;color:#d9d9d9}.weui-cells:after{bottom:0;border-bottom:1px solid #d9d9d9;-webkit-transform-origin:0 100%;transform-origin:0 100%;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-cells__title{margin-top:.77em;margin-bottom:.3em;padding-left:15px;padding-right:15px;color:#999;font-size:14px}.weui-cells__title+.weui-cells{margin-top:0}.weui-cells__tips{margin-top:.3em;color:#999;padding-left:15px;padding-right:15px;font-size:14px}.weui-cell{padding:10px 15px;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.weui-cell:before{content:\\\" \\\";position:absolute;left:0;top:0;right:0;height:1px;border-top:1px solid #d9d9d9;color:#d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleY(.5);transform:scaleY(.5);left:15px}.weui-cell:first-child:before{display:none}.weui-cell_primary{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.weui-cell__bd{-webkit-box-flex:1;-ms-flex:1;flex:1}.weui-cell__ft{text-align:right;color:#999}.vux-cell-justify{height:1.41176471em}.vux-cell-justify.vux-cell-justify:after{content:\\\".\\\";display:inline-block;width:100%;overflow:hidden;height:0}\", \"\", {\"version\":3,\"sources\":[\"F:/Ropynn/备份/lvyun/node_modules/vux/src/components/group-title/index.vue\"],\"names\":[],\"mappings\":\"AA6GA,kBACE,0CAA8C,AAC9C,aAAe,CAChB,AACD,yBACE,wBAA0B,CAC3B,AACD,iCACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,uCACE,YAAa,AACb,qBAAsB,AACtB,WAAY,AACZ,UAAW,AACX,yBAA0B,AAC1B,qBAAsB,AACtB,mBAAoB,AACpB,+CAAyD,AACjD,uCAAiD,AACzD,kBAAmB,AACnB,SAAU,AACV,kBAAmB,AACnB,QAAS,AACT,gBAAiB,AACjB,SAAW,CACZ,AACD,gBACE,cAAe,AACf,cAAgB,CACjB,AACD,mCACE,aAAe,CAChB,AACD,+BACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,qCACE,YAAa,AACb,qBAAsB,AACtB,WAAY,AACZ,UAAW,AACX,yBAA0B,AAC1B,qBAAsB,AACtB,mBAAoB,AACpB,+CAAyD,AACjD,uCAAiD,AACzD,kBAAmB,AACnB,SAAU,AACV,kBAAmB,AACnB,QAAS,AACT,gBAAiB,AACjB,UAAY,CACb,AACD,YACE,wBAAyB,AACzB,sBAA0B,AAC1B,uBAAwB,AACxB,eAAgB,AAChB,gBAAiB,AACjB,iBAAmB,CACpB,AACD,mBAIE,MAAO,AAGP,6BAA8B,AAE9B,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,oBAAuB,CAChC,AACD,qCAbE,YAAa,AACb,kBAAmB,AACnB,OAAQ,AAER,QAAS,AACT,WAAY,AAEZ,aAAe,CAmBhB,AAbD,kBAIE,SAAU,AAGV,gCAAiC,AAEjC,gCAAiC,AACzB,wBAAyB,AACjC,6BAA+B,AACvB,oBAAuB,CAChC,AACD,mBACE,iBAAmB,AACnB,mBAAqB,AACrB,kBAAmB,AACnB,mBAAoB,AACpB,WAAe,AACf,cAAgB,CACjB,AACD,+BACE,YAAc,CACf,AACD,kBACE,gBAAiB,AACjB,WAAe,AACf,kBAAmB,AACnB,mBAAoB,AACpB,cAAgB,CACjB,AACD,WACE,kBAAmB,AACnB,kBAAmB,AACnB,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,yBAA0B,AACtB,sBAAuB,AACnB,kBAAoB,CAC7B,AACD,kBACE,YAAa,AACb,kBAAmB,AACnB,OAAQ,AACR,MAAO,AACP,QAAS,AACT,WAAY,AACZ,6BAA8B,AAC9B,cAAe,AACf,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,qBAAuB,AAC/B,SAAW,CACZ,AACD,8BACE,YAAc,CACf,AACD,mBACE,wBAAyB,AACrB,qBAAsB,AAClB,sBAAwB,CACjC,AACD,eACE,mBAAoB,AAChB,WAAY,AACR,MAAQ,CACjB,AACD,eACE,iBAAkB,AAClB,UAAe,CAChB,AACD,kBACE,mBAAqB,CACtB,AACD,yCACE,YAAa,AACb,qBAAsB,AACtB,WAAY,AACZ,gBAAiB,AACjB,QAAU,CACX\",\"file\":\"index.vue\",\"sourcesContent\":[\"/**\\n* actionsheet\\n*/\\n/**\\n* datetime\\n*/\\n/**\\n* tabbar\\n*/\\n/**\\n* tab\\n*/\\n/**\\n* dialog\\n*/\\n/**\\n* x-number\\n*/\\n/**\\n* checkbox\\n*/\\n/**\\n* check-icon\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Mask\\n*/\\n/**\\n* Range\\n*/\\n/**\\n* Tabbar\\n*/\\n/**\\n* Header\\n*/\\n/**\\n* Timeline\\n*/\\n/**\\n* Switch\\n*/\\n/**\\n* Button\\n*/\\n/**\\n* swipeout\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Badge\\n*/\\n/**\\n* Popover\\n*/\\n/**\\n* Button tab\\n*/\\n/* alias */\\n/**\\n* Swiper\\n*/\\n/**\\n* checklist\\n*/\\n/**\\n* popup-picker\\n*/\\n/**\\n* popup\\n*/\\n/**\\n* popup-header\\n*/\\n/**\\n* form-preview\\n*/\\n/**\\n* sticky\\n*/\\n/**\\n* group\\n*/\\n/**\\n* toast\\n*/\\n/**\\n* icon\\n*/\\n/**\\n* calendar\\n*/\\n/**\\n* week-calendar\\n*/\\n/**\\n* search\\n*/\\n/**\\n* radio\\n*/\\n/**\\n* loadmore\\n*/\\n.weui-cell_access {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  color: inherit;\\n}\\n.weui-cell_access:active {\\n  background-color: #ECECEC;\\n}\\n.weui-cell_access .weui-cell__ft {\\n  padding-right: 13px;\\n  position: relative;\\n}\\n.weui-cell_access .weui-cell__ft:after {\\n  content: \\\" \\\";\\n  display: inline-block;\\n  height: 6px;\\n  width: 6px;\\n  border-width: 2px 2px 0 0;\\n  border-color: #C8C8CD;\\n  border-style: solid;\\n  -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n          transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n  position: relative;\\n  top: -2px;\\n  position: absolute;\\n  top: 50%;\\n  margin-top: -4px;\\n  right: 2px;\\n}\\n.weui-cell_link {\\n  color: #586C94;\\n  font-size: 14px;\\n}\\n.weui-cell_link:first-child:before {\\n  display: block;\\n}\\n.weui-cell_access.vux-cell-box {\\n  padding-right: 13px;\\n  position: relative;\\n}\\n.weui-cell_access.vux-cell-box:after {\\n  content: \\\" \\\";\\n  display: inline-block;\\n  height: 6px;\\n  width: 6px;\\n  border-width: 2px 2px 0 0;\\n  border-color: #C8C8CD;\\n  border-style: solid;\\n  -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n          transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n  position: relative;\\n  top: -2px;\\n  position: absolute;\\n  top: 50%;\\n  margin-top: -4px;\\n  right: 17px;\\n}\\n.weui-cells {\\n  margin-top: 1.17647059em;\\n  background-color: #FFFFFF;\\n  line-height: 1.41176471;\\n  font-size: 17px;\\n  overflow: hidden;\\n  position: relative;\\n}\\n.weui-cells:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  height: 1px;\\n  border-top: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-cells:after {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  height: 1px;\\n  border-bottom: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 100%;\\n          transform-origin: 0 100%;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-cells__title {\\n  margin-top: 0.77em;\\n  margin-bottom: 0.3em;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  color: #999999;\\n  font-size: 14px;\\n}\\n.weui-cells__title + .weui-cells {\\n  margin-top: 0;\\n}\\n.weui-cells__tips {\\n  margin-top: .3em;\\n  color: #999999;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  font-size: 14px;\\n}\\n.weui-cell {\\n  padding: 10px 15px;\\n  position: relative;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n.weui-cell:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  height: 1px;\\n  border-top: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n  left: 15px;\\n}\\n.weui-cell:first-child:before {\\n  display: none;\\n}\\n.weui-cell_primary {\\n  -webkit-box-align: start;\\n      -ms-flex-align: start;\\n          align-items: flex-start;\\n}\\n.weui-cell__bd {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n.weui-cell__ft {\\n  text-align: right;\\n  color: #999999;\\n}\\n.vux-cell-justify {\\n  height: 1.41176471em;\\n}\\n.vux-cell-justify.vux-cell-justify:after {\\n  content: \\\".\\\";\\n  display: inline-block;\\n  width: 100%;\\n  overflow: hidden;\\n  height: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 421 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(287)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".business[data-v-96fcf3be]{background-color:#ddd}.business header[data-v-96fcf3be]{background-color:#4b6eb7;padding:.266666666666667rem}.business .headimg[data-v-96fcf3be]{display:inline-block}.business .headimg img[data-v-96fcf3be]{height:1.333333333333333rem;vertical-align:middle}.business .uname[data-v-96fcf3be]{padding-left:.266666666666667rem;display:inline-block;font-size:14px;vertical-align:middle}.business .dec[data-v-96fcf3be]{text-align:center}.business .grid-center[data-v-96fcf3be]{display:block;text-align:center;color:#666;font-size:16px}.business .container[data-v-96fcf3be]{margin-top:.266666666666667rem;background-color:#fff;border:1px solid #ccc}.business .head[data-v-96fcf3be]{padding:.266666666666667rem;text-align:center}.business .command[data-v-96fcf3be]{background-color:#fff;margin-top:.266666666666667rem}.business #myCharts[data-v-96fcf3be]{width:100%;height:9.333333333333334rem;font-size:14px}\", \"\", {\"version\":3,\"sources\":[\"F:/Ropynn/备份/lvyun/src/components/businessman.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,qBAAuB,CACxB,AACD,kCACE,yBAA0B,AAC1B,2BAA8B,CAC/B,AACD,oCACE,oBAAsB,CACvB,AACD,wCACE,4BAA6B,AAC7B,qBAAuB,CACxB,AACD,kCACE,iCAAmC,AACnC,qBAAsB,AACtB,eAAgB,AAChB,qBAAuB,CACxB,AACD,gCACE,iBAAmB,CACpB,AACD,wCACE,cAAe,AACf,kBAAmB,AACnB,WAAY,AACZ,cAAgB,CACjB,AACD,sCACE,+BAAiC,AACjC,sBAAuB,AACvB,qBAAuB,CACxB,AACD,iCACE,4BAA8B,AAC9B,iBAAmB,CACpB,AACD,oCACE,sBAAuB,AACvB,8BAAiC,CAClC,AACD,qCACE,WAAY,AACZ,4BAA6B,AAC7B,cAAgB,CACjB\",\"file\":\"businessman.vue\",\"sourcesContent\":[\"\\n.business[data-v-96fcf3be] {\\n  background-color: #ddd;\\n}\\n.business header[data-v-96fcf3be] {\\n  background-color: #4b6eb7;\\n  padding: 0.266666666666667rem;\\n}\\n.business .headimg[data-v-96fcf3be] {\\n  display: inline-block;\\n}\\n.business .headimg img[data-v-96fcf3be] {\\n  height: 1.333333333333333rem;\\n  vertical-align: middle;\\n}\\n.business .uname[data-v-96fcf3be] {\\n  padding-left: 0.266666666666667rem;\\n  display: inline-block;\\n  font-size: 14px;\\n  vertical-align: middle;\\n}\\n.business .dec[data-v-96fcf3be] {\\n  text-align: center;\\n}\\n.business .grid-center[data-v-96fcf3be] {\\n  display: block;\\n  text-align: center;\\n  color: #666;\\n  font-size: 16px;\\n}\\n.business .container[data-v-96fcf3be] {\\n  margin-top: 0.266666666666667rem;\\n  background-color: #fff;\\n  border: 1px solid #ccc;\\n}\\n.business .head[data-v-96fcf3be] {\\n  padding: 0.266666666666667rem;\\n  text-align: center;\\n}\\n.business .command[data-v-96fcf3be] {\\n  background-color: #fff;\\n  margin-top: 0.266666666666667rem;\\n}\\n.business #myCharts[data-v-96fcf3be] {\\n  width: 100%;\\n  height: 9.333333333333334rem;\\n  font-size: 14px;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 422 */,\n/* 423 */,\n/* 424 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(301);\n\nvar SymbolClz = __webpack_require__(344);\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, isIgnore) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, isIgnore) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, isIgnore)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n/* 425 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(319);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n/* 426 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\n__webpack_require__(427);\n\n__webpack_require__(428);\n\nvar visualSymbol = __webpack_require__(487);\n\nvar layoutPoints = __webpack_require__(465);\n\nvar dataSample = __webpack_require__(477);\n\n__webpack_require__(439);\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n/***/ }),\n/* 427 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(345);\n\nvar SeriesModel = __webpack_require__(361);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {origin: 'auto'},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 428 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(299);\n\nvar SymbolDraw = __webpack_require__(424);\n\nvar SymbolClz = __webpack_require__(344);\n\nvar lineAnimationDiff = __webpack_require__(429);\n\nvar graphic = __webpack_require__(301);\n\nvar modelUtil = __webpack_require__(300);\n\nvar _poly = __webpack_require__(430);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(365);\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @param {string} origin origin of areaStyle. Valid values: 'auto', 'start',\n *                        'end'.\n *                        auto: from axisLine to data\n *                        start: from min to data\n *                        end: from data to max\n * @private\n */\n\n\nfunction getStackedOnPoints(seriesModel, coordSys, data, origin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (origin === 'start') {\n    valueStart = extent[0];\n  } else if (origin === 'end') {\n    valueStart = extent[1];\n  } else {\n    // auto\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueCoordDim = valueAxis.dim;\n  var baseDataOffset = valueCoordDim === 'x' || valueCoordDim === 'radius' ? 1 : 0;\n  var valueDim = data.mapDimension(valueCoordDim);\n  return data.mapArray(valueDim ? [valueDim] : [], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var origin = areaStyleModel.get('origin');\n    var stackedOnPoints = getStackedOnPoints(seriesModel, coordSys, data, origin);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 429 */\n/***/ (function(module, exports) {\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 430 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\nvar vec2 = __webpack_require__(304);\n\nvar fixClipWithShadow = __webpack_require__(379);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n/* 431 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(355);\n\n__webpack_require__(438);\n\n/***/ }),\n/* 432 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar zrUtil = __webpack_require__(299);\n\nvar axisPointerModelHelper = __webpack_require__(323);\n\nvar axisTrigger = __webpack_require__(437);\n\n__webpack_require__(433);\n\n__webpack_require__(434);\n\n__webpack_require__(436);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n/* 433 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 434 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar globalListener = __webpack_require__(348);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n/* 435 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar clazzUtil = __webpack_require__(313);\n\nvar graphic = __webpack_require__(301);\n\nvar axisPointerModelHelper = __webpack_require__(323);\n\nvar eventTool = __webpack_require__(320);\n\nvar throttleUtil = __webpack_require__(339);\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 436 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(301);\n\nvar BaseAxisPointer = __webpack_require__(435);\n\nvar viewHelper = __webpack_require__(349);\n\nvar cartesianAxisHelper = __webpack_require__(352);\n\nvar AxisView = __webpack_require__(351);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n/* 437 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar _model = __webpack_require__(300);\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(323);\n\nvar findPointFromSeries = __webpack_require__(347);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 438 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar graphic = __webpack_require__(301);\n\nvar AxisBuilder = __webpack_require__(350);\n\nvar AxisView = __webpack_require__(351);\n\nvar cartesianAxisHelper = __webpack_require__(352);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n/* 439 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar zrUtil = __webpack_require__(299);\n\nvar graphic = __webpack_require__(301);\n\n__webpack_require__(456);\n\n__webpack_require__(431);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n/* 440 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(311);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(309);\n\nvar graphic = __webpack_require__(301);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n/* 441 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\n__webpack_require__(442);\n\n__webpack_require__(444);\n\n__webpack_require__(443);\n\nvar legendFilter = __webpack_require__(445);\n\nvar Component = __webpack_require__(312);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n/* 442 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar zrUtil = __webpack_require__(299);\n\nvar Model = __webpack_require__(310);\n\nvar _model = __webpack_require__(300);\n\nvar DEFAULT_COMPONENT_NAME = _model.DEFAULT_COMPONENT_NAME;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var potentialSeriesName;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          potentialSeriesName = seriesName;\n        }\n      } else {\n        potentialSeriesName = seriesName;\n      }\n\n      if (potentialSeriesName && potentialSeriesName !== DEFAULT_COMPONENT_NAME) {\n        potentialData.push(potentialSeriesName);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n/* 443 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(303);\n\nvar zrUtil = __webpack_require__(299);\n\nvar _symbol = __webpack_require__(327);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(301);\n\nvar _listComponent = __webpack_require__(440);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(311);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 444 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar zrUtil = __webpack_require__(299);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n/* 445 */\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 446 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar graphic = __webpack_require__(301);\n\nvar _layout = __webpack_require__(311);\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n/* 447 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\n__webpack_require__(432);\n\n__webpack_require__(449);\n\n__webpack_require__(450);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n/* 448 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar zrColor = __webpack_require__(322);\n\nvar eventUtil = __webpack_require__(320);\n\nvar env = __webpack_require__(306);\n\nvar formatUtil = __webpack_require__(309);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n/* 449 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 450 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(303);\n\nvar zrUtil = __webpack_require__(299);\n\nvar env = __webpack_require__(306);\n\nvar TooltipContent = __webpack_require__(448);\n\nvar formatUtil = __webpack_require__(309);\n\nvar numberUtil = __webpack_require__(305);\n\nvar graphic = __webpack_require__(301);\n\nvar findPointFromSeries = __webpack_require__(347);\n\nvar layoutUtil = __webpack_require__(311);\n\nvar Model = __webpack_require__(310);\n\nvar globalListener = __webpack_require__(348);\n\nvar axisHelper = __webpack_require__(314);\n\nvar axisPointerViewHelper = __webpack_require__(349);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 451 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n/* 452 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar axisDefault = __webpack_require__(451);\n\nvar ComponentModel = __webpack_require__(312);\n\nvar _layout = __webpack_require__(311);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = __webpack_require__(357);\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 453 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Axis = __webpack_require__(353);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 454 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n/* 455 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Cartesian = __webpack_require__(454);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n/* 456 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(302);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(299);\n\nvar BoundingRect = __webpack_require__(308);\n\nvar _layout = __webpack_require__(311);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(314);\n\nvar Cartesian2D = __webpack_require__(455);\n\nvar Axis2D = __webpack_require__(453);\n\nvar CoordinateSystem = __webpack_require__(333);\n\n__webpack_require__(457);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n/* 457 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(355);\n\nvar ComponentModel = __webpack_require__(312);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 458 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(308);\n\nvar bbox = __webpack_require__(373);\n\nvar vec2 = __webpack_require__(304);\n\nvar polygonContain = __webpack_require__(542);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n/* 459 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Region = __webpack_require__(458);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 460 */\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n/* 461 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(385);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(317);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(304);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(299);\n\nvar colorTool = __webpack_require__(322);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(301);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(305);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(309);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(339);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(462);\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = __webpack_require__(459);\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = __webpack_require__(356);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(310);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(353);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(306);\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n/***/ }),\n/* 462 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar createListFromArray = __webpack_require__(345);\n\nvar axisHelper = __webpack_require__(314);\n\nvar axisModelCommonMixin = __webpack_require__(354);\n\nvar Model = __webpack_require__(310);\n\nvar _layout = __webpack_require__(311);\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _completeDimensions = __webpack_require__(358);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = __webpack_require__(359);\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = __webpack_require__(327);\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n/* 463 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 464 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar _number = __webpack_require__(305);\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [data.mapDimension('x'), data.mapDimension('y')];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(data.mapDimension(valueAxis.dim), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;\n\n/***/ }),\n/* 465 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar map = _util.map;\n\nvar createRenderPlanner = __webpack_require__(346);\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.getDimension(data.mapDimension(dim));\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 466 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar graphic = __webpack_require__(301);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 467 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar modelUtil = __webpack_require__(300);\n\nvar ComponentModel = __webpack_require__(312);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 468 */\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 469 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(336);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 470 */\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 471 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(319);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = __webpack_require__(309);\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 472 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(336);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 473 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(336);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 474 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(315);\n\nvar graphicUtil = __webpack_require__(301);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 475 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(476);\n\nvar _model = __webpack_require__(300);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 476 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar modelUtil = __webpack_require__(300);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(labelOpt) {\n  var textStyle = isObject(labelOpt) && labelOpt.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOpt[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt.label);\n    opt.emphasis && compatTextStyle(opt.emphasis.label);\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt.label); // treemap\n\n  compatTextStyle(seriesOpt.upperLabel); // graph\n\n  compatTextStyle(seriesOpt.edgeLabel);\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis.label); // treemap\n\n    compatTextStyle(seriesOpt.emphasis.upperLabel); // graph\n\n    compatTextStyle(seriesOpt.emphasis.edgeLabel);\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    convertNormalEmphasis(timelineOpt, 'checkpointStyle');\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 477 */\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 478 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Scale = __webpack_require__(325);\n\nvar numberUtil = __webpack_require__(305);\n\nvar IntervalScale = __webpack_require__(337);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 479 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Scale = __webpack_require__(325);\n\nvar OrdinalMeta = __webpack_require__(357);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 480 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar numberUtil = __webpack_require__(305);\n\nvar formatUtil = __webpack_require__(309);\n\nvar scaleHelper = __webpack_require__(364);\n\nvar IntervalScale = __webpack_require__(337);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n/* 481 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = __webpack_require__(338);\n\nvar createTask = _task.createTask;\n\nvar _component = __webpack_require__(326);\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = __webpack_require__(360);\n\nvar ExtensionAPI = __webpack_require__(343);\n\nvar _model = __webpack_require__(300);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished;\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.incrementalRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count();\n  var incrementalRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    incrementalRender: incrementalRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function (stageHandlers, useClearVisual) {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(stageHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (stageHandlers, ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, stageHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (stageHandlers, ecModel, payload, opt) {\n  performStageTasks(this, stageHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n/***/ }),\n/* 482 */\n/***/ (function(module, exports) {\n\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n/***/ }),\n/* 483 */\n/***/ (function(module, exports) {\n\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 484 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(330);\n\nvar componentUtil = __webpack_require__(326);\n\nvar clazzUtil = __webpack_require__(313);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n/* 485 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar lang = __webpack_require__(463);\n\nvar _dataProvider = __webpack_require__(319);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 486 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(341);\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.get('name'), null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n/* 487 */\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 488 */,\n/* 489 */,\n/* 490 */,\n/* 491 */,\n/* 492 */,\n/* 493 */,\n/* 494 */,\n/* 495 */,\n/* 496 */,\n/* 497 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(418);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(288)(\"51465f56\", content, true);\n\n/***/ }),\n/* 498 */,\n/* 499 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(420);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(288)(\"64d4737d\", content, true);\n\n/***/ }),\n/* 500 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(421);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(288)(\"508f4739\", content, true);\n\n/***/ }),\n/* 501 */,\n/* 502 */,\n/* 503 */,\n/* 504 */,\n/* 505 */,\n/* 506 */,\n/* 507 */,\n/* 508 */,\n/* 509 */,\n/* 510 */,\n/* 511 */,\n/* 512 */,\n/* 513 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('a', {\n    staticClass: \"weui-grid\",\n    style: (_vm.style),\n    attrs: {\n      \"href\": \"javascript:;\"\n    },\n    on: {\n      \"click\": _vm.onClick\n    }\n  }, [(_vm.hasIconSlot || _vm.icon) ? _c('div', {\n    staticClass: \"weui-grid__icon\"\n  }, [_vm._t(\"icon\", [_c('img', {\n    attrs: {\n      \"src\": _vm.icon,\n      \"alt\": \"\"\n    }\n  })])], 2) : _vm._e(), _vm._v(\" \"), (_vm.hasLabelSlot || _vm.label) ? _c('p', {\n    staticClass: \"weui-grid__label\"\n  }, [_vm._t(\"label\", [_c('span', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.label)\n    }\n  })])], 2) : _vm._e(), _vm._v(\" \"), _vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 514 */,\n/* 515 */,\n/* 516 */,\n/* 517 */,\n/* 518 */,\n/* 519 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"weui-grids\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 520 */,\n/* 521 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"weui-cells__title\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 522 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"business\"\n  }, [_c('header', [_c('div', {\n    staticClass: \"headimg\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.user.headimgurl\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"uname\"\n  }, [_c('div', [_vm._v(_vm._s(_vm.user.nickname))]), _vm._v(\" \"), _c('div', [_vm._v(\"普通会员\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"today container\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"当日数据\")]), _vm._v(\" \"), _c('grid', {\n    attrs: {\n      \"cols\": 3\n    }\n  }, [_c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"新增用户\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.nPerson))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"新增订单\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.nOrder))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"新增管理员\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.nAdminer))])])], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"all container\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"总数据\")]), _vm._v(\" \"), _c('grid', {\n    attrs: {\n      \"cols\": 3\n    }\n  }, [_c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"注册用户\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.aPerson))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"订单\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.aOrder))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"管理员\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.aAdminer))])])], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"all_money container\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"总收入（元）\")]), _vm._v(\" \"), _c('grid', {\n    attrs: {\n      \"cols\": _vm.col\n    }\n  }, [_c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"投资人收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.investo / 100 || 0))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"合伙人收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.partner / 100 || 0))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"店家收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.owner / 100 || 0))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"平台收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.platform / 100 || 0))])])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"command\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"走势图\")]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"myCharts\"\n    }\n  })])\n}]}\n\n/***/ }),\n/* 523 */,\n/* 524 */,\n/* 525 */,\n/* 526 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(387),\n  /* template */\n  __webpack_require__(513),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 527 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(497)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(388),\n  /* template */\n  __webpack_require__(519),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 528 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(499)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(389),\n  /* template */\n  __webpack_require__(521),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 529 */,\n/* 530 */,\n/* 531 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(299);\n\nvar vec2 = __webpack_require__(304);\n\nvar Draggable = __webpack_require__(564);\n\nvar Eventful = __webpack_require__(321);\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n/* 532 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(299);\n\nvar _config = __webpack_require__(329);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(378);\n\nvar Pattern = __webpack_require__(377);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n/* 533 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(329);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(299);\n\nvar log = __webpack_require__(375);\n\nvar BoundingRect = __webpack_require__(308);\n\nvar timsort = __webpack_require__(340);\n\nvar Layer = __webpack_require__(532);\n\nvar requestAnimationFrame = __webpack_require__(369);\n\nvar Image = __webpack_require__(376);\n\nvar env = __webpack_require__(306);\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now(); // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear();\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear();\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n/* 534 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(299);\n\nvar env = __webpack_require__(306);\n\nvar Group = __webpack_require__(330);\n\nvar timsort = __webpack_require__(340);\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n/* 535 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(299);\n\nvar _event = __webpack_require__(320);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(369);\n\nvar Animator = __webpack_require__(368);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // Frame should before stage update. Upper application\n    // depends on the sequence (e.g., echarts-stream)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n/* 536 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(537);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n/* 537 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n/* 538 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(370);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 539 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(316);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 540 */\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 541 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(331);\n\nvar line = __webpack_require__(540);\n\nvar cubic = __webpack_require__(539);\n\nvar quadratic = __webpack_require__(543);\n\nvar arc = __webpack_require__(538);\n\nvar _util = __webpack_require__(370);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(316);\n\nvar windingLine = __webpack_require__(371);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 542 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(371);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n/* 543 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(316);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 544 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(320);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n/* 545 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(320);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(299);\n\nvar Eventful = __webpack_require__(321);\n\nvar env = __webpack_require__(306);\n\nvar GestureMgr = __webpack_require__(544);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 546 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 547 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(299);\n\nvar inherits = _util.inherits;\n\nvar Displayble = __webpack_require__(332);\n\nvar BoundingRect = __webpack_require__(308);\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n/***/ }),\n/* 548 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Gradient = __webpack_require__(341);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 549 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(299);\n\nvar Gradient = __webpack_require__(341);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 550 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(332);\n\nvar zrUtil = __webpack_require__(299);\n\nvar textContain = __webpack_require__(315);\n\nvar textHelper = __webpack_require__(383);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n/* 551 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(304);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 552 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(304);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 553 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(383);\n\nvar BoundingRect = __webpack_require__(308);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n/* 554 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 555 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\nvar vec2 = __webpack_require__(304);\n\nvar _curve = __webpack_require__(316);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 556 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 557 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 558 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\nvar polyHelper = __webpack_require__(381);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 559 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\nvar polyHelper = __webpack_require__(381);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 560 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\nvar roundRectHelper = __webpack_require__(382);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 561 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 562 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\nvar fixClipWithShadow = __webpack_require__(379);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 563 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(368);\n\nvar log = __webpack_require__(375);\n\nvar _util = __webpack_require__(299);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n/* 564 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n/* 565 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(307);\n\nvar PathProxy = __webpack_require__(331);\n\nvar transformPath = __webpack_require__(566);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n/* 566 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(331);\n\nvar _vector = __webpack_require__(304);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// static/js/0.258b40fd363bb48ebb91.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-96fcf3be\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../node_modules/vux-loader/src/style-loader.js!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./businessman.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vux-loader/src/script-loader.js!../../node_modules/vue-loader/lib/selector?type=script&index=0!./businessman.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-96fcf3be\\\"}!../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../node_modules/vux-loader/src/template-loader.js!../../node_modules/vue-loader/lib/selector?type=template&index=0!./businessman.vue\"),\n  /* scopeId */\n  \"data-v-96fcf3be\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/businessman.vue\n// module id = 289\n// module chunks = 0","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 299\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * name may be displayed on screen, so use '-'.\n * But we should make sure it is not duplicated\n * with user specified name, so use '\\0';\n */\n\nvar DEFAULT_COMPONENT_NAME = '\\0-';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : DEFAULT_COMPONENT_NAME;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.DEFAULT_COMPONENT_NAME = DEFAULT_COMPONENT_NAME;\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 300\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 301\n// module chunks = 0","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/config.js\n// module id = 302\n// module chunks = 0","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.2';\nvar dependencies = {\n  zrender: '4.0.1'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // this._scheduler = new Scheduler();\n  // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(visualFuncs, ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished);\n\n      if (!scheduler.unfinished) {\n        this._zr && this._zr.flush();\n        this.trigger('finished');\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(dataProcessorFuncs, ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel);\n    stackSeriesData(ecModel);\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(visualFuncs, ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(visualFuncs, ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks(dataProcessorFuncs);\n  scheduler.prepareStageTasks(visualFuncs);\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  refresh(this, optionChanged, opts && opts.silent);\n};\n\nfunction refresh(ecIns, needPrepare, silent) {\n  ecIns[IN_MAIN_PROCESS] = true;\n  needPrepare && prepare(ecIns);\n  updateMethods.update.call(ecIns);\n  ecIns[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(ecIns, silent);\n  triggerUpdatedEvent.call(ecIns, silent);\n}\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params);\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 303\n// module chunks = 0","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 304\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 305\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 306\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 307\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 308\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 309\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 310\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 311\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 312\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 313\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel) {\n    var isBaseAxisAndHasBarSeries = zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n      return seriesModel.getBaseAxis() === model.axis;\n    }).length > 0;\n\n    if ((scaleType === 'time' || scaleType === 'interval') && isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model) {\n  var ecModel = model.ecModel; // Get Axis Length\n\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType('bar'), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  })); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  var totalOverFlow = Math.abs(minOverflow) + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.adjustScaleForOverflow = adjustScaleForOverflow;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 314\n// module chunks = 0","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 315\n// module chunks = 0","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 316\n// module chunks = 0","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 317\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/Source.js\n// module id = 318\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/dataProvider.js\n// module id = 319\n// module chunks = 0","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 320\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 321\n// module chunks = 0","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 322\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 323\n// module chunks = 0","// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/sourceType.js\n// module id = 324\n// module chunks = 0","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 325\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 326\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 327\n// module chunks = 0","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 329\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 330\n// module chunks = 0","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 331\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 332\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 333\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var coordDimMap = summary.coordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (dimItem.isSysCoord && mayLabelDimType(dimItem.type)) {\n        // Use the last coord dim (and label friendly) as default label,\n        // because both show x, y on label is not look good, and usually\n        // y axis is more focusd conventionally.\n        defaultedLabel[0] = dimName;\n      }\n\n      coordDimMap.set(coordDim, 1);\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  coordDimMap.each(function (v, coordDim) {\n    dataDimsOnCoord = dataDimsOnCoord.concat(encode[coordDim]);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/dimensionHelper.js\n// module id = 334\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/sourceHelper.js\n// module id = 335\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 336\n// module chunks = 0","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 337\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && start < end && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  taskIns._progress = !skip && taskIns._reset && taskIns._reset(taskIns.context);\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n};\n\nexports.createTask = createTask;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/stream/task.js\n// module id = 338\n// module chunks = 0","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 339\n// module chunks = 0","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 340\n// module chunks = 0","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 341\n// module chunks = 0","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 342\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 343\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 344\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n */\nfunction createListFromArray(source, seriesModel) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType);\n        dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var list = new List(dimInfoList, seriesModel);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 345\n// module chunks = 0","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalIncremental = fields.incrementalRender;\n    var large = fields.large = pipelineContext.large;\n    var incremental = fields.incrementalRender = pipelineContext.incrementalRender;\n    return (originalLarge ^ large || originalIncremental ^ incremental) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createRenderPlanner.js\n// module id = 346\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 347\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 348\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 349\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 350\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 351\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 352\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 353\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 354\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 355\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\n\nfunction getIndicesCtor(list) {\n  var CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\n  var CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array; // The possible max value in this._indicies is always this._rawCount despite of filtering.\n\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is float64\n        type: 'float'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'float';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number|Array} [idx=0] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array.\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dims = this._dimensionsSummary.encode[coordDim];\n  return idx === true ? dims && dims.slice() || [] : dims ? dims[idx || 0] : null;\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = [Infinity, -Infinity];\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n}; // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n}; // FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n// Hack a much simpler _getFast\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim, stack) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = [Infinity, -Infinity];\n  stack = (stack || false) && this.isStacked(dim);\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count();\n  var cacheName = [dim, !!stack].join('_'); // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices && !stack;\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[cacheName];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[cacheName] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim, stack) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim, stack);\n};\n\nlistProto.setApproximateExtent = function (extent, dim, stack) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n\nlistProto.isStacked = function (concreteDim) {\n  var dimensionInfo = this._dimensionInfos[concreteDim];\n  return dimensionInfo && dimensionInfo.stackable && this.stackedOn;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var chunkSize = this._chunkSize;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var chunkIndex = Math.floor(i / chunkSize);\n      var chunkOffset = i % chunkSize;\n\n      if (dimData[chunkIndex][chunkOffset] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n  context = context || this;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  stack = stack || false;\n  context = context || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIdx);\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = stack ? this.get(dimensions[k], i, true) : this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range, stack) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  stack = stack || false;\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices && !stack) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n\n          if (val >= min && val <= max) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i];\n\n          if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      stack = stack || this.isStacked(dim0);\n\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n        var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n          var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      storage[dim] = zrUtil.indexOf(excludeDimensions, dim) >= 0 ? cloneDimStore(originalStorage[dim]) // Direct reference for other dimensions\n      : originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  'use strict';\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex, stack);\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = retValue[i];\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 356\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/OrdinalMeta.js\n// module id = 357\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] can be specified to give names.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      isSysCoord: boolean True if the coord is from sys dimension.\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      resultItem.isSysCoord = true; // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n\n\nfunction getDimCount(source, sysDims, dimsDef, dimCount) {\n  if (dimCount == null) {\n    dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  }\n\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 358\n// module chunks = 0","var completeDimensions = require(\"./completeDimensions\");\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.extraPrefix]\n * @param {boolean} [opt.extraFromZero]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    extraPrefix: opt.extraPrefix,\n    extraFromZero: opt.extraFromZero\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/createDimensions.js\n// module id = 359\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 360\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (seriesName === modelUtil.DEFAULT_COMPONENT_NAME) {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (modelUtil.DEFAULT_COMPONENT_NAME === name) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 361\n// module chunks = 0","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 362\n// module chunks = 0","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/referHelper.js\n// module id = 363\n// module chunks = 0","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 364\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var incremental = seriesModel.pipelineContext.incrementalRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = incremental && view.incrementalPrepareRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod : 'render';\n  view[methodName](seriesModel, ecModel, api, payload);\n  return incremental ? renderTaskProgress : null;\n}\n\nfunction renderTaskProgress(params, context) {\n  context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n}\n\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 365\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 367\n// module chunks = 0","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 368\n// module chunks = 0","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 369\n// module chunks = 0","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 370\n// module chunks = 0","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 371\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 372\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 373\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 374\n// module chunks = 0","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 375\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 376\n// module chunks = 0","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 377\n// module chunks = 0","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 378\n// module chunks = 0","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 379\n// module chunks = 0","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixShadow.js\n// module id = 380\n// module chunks = 0","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 381\n// module chunks = 0","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 382\n// module chunks = 0","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 383\n// module chunks = 0","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 384\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.1';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 385\n// module chunks = 0","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { go } from '../../libs/router'\n\nexport default {\n  name: 'grid-item',\n  props: ['icon', 'label', 'link'],\n  created () {\n    this.$parent.countColumn()\n  },\n  mounted () {\n    this.$slots.icon && (this.hasIconSlot = true)\n    this.$slots.label && (this.hasLabelSlot = true)\n  },\n  destroyed () {\n    this.$parent.countColumn()\n  },\n  computed: {\n    style () {\n      const column = this.$parent.column\n      if (!column || column === 3) {\n        return\n      }\n      const styles = {}\n      styles.width = `${100 / column}%`\n      return styles\n    }\n  },\n  methods: {\n    onClick () {\n      this.$emit('on-item-click')\n      go(this.link, this.$router)\n    }\n  },\n  data () {\n    return {\n      hasIconSlot: false,\n      hasLabelSlot: false\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/grid/grid-item.vue","//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'grid',\n  methods: {\n    countColumn () {\n      this.childrenSize = this.$children.length\n    }\n  },\n  props: {\n    rows: {\n      type: Number,\n      validator () {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV === 'development') {\n          console.warn('[VUX warn] Grid rows 属性已经废弃，使用 cols 代替。单行列数为自动计算')\n        }\n        return true\n      }\n    },\n    cols: {\n      type: Number\n    }\n  },\n  computed: {\n    column () {\n      return this.cols || this.childrenSize\n    }\n  },\n  data () {\n    return {\n      childrenSize: 3\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/grid/grid.vue","//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'group-title'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/group-title/index.vue","\nimport Grid from 'vux/src/components/grid/grid.vue'\nimport GridItem from 'vux/src/components/grid/grid-item.vue'\nimport GroupTitle from 'vux/src/components/group-title/index.vue'\n\nconst format = require(\"date-fns/format\");\n\n\nimport echarts from \"echarts/lib/echarts\";\nimport \"echarts/lib/chart/line\";\n\nimport \"echarts/lib/component/tooltip\";\nimport \"echarts/lib/component/title\";\nimport \"echarts/lib/component/legend\";\nexport default {\ncomponents: {\nGrid,\nGridItem,\nGroupTitle\n},\ndata() {\nreturn {\nuser: {},\nallInfo: {},\nallMoney: {},\ncol: 2,\ndate: [\nformat(new Date() - 6 * 24 * 3600 * 1000, \"MM-DD\"),\nformat(new Date() - 5 * 24 * 3600 * 1000, \"MM-DD\"),\nformat(new Date() - 4 * 24 * 3600 * 1000, \"MM-DD\"),\nformat(new Date() - 3 * 24 * 3600 * 1000, \"MM-DD\"),\nformat(new Date() - 2 * 24 * 3600 * 1000, \"MM-DD\"),\nformat(new Date() - 1 * 24 * 3600 * 1000, \"MM-DD\"),\nformat(new Date(), \"MM-DD\")\n]\n};\n},\ncreated() {\nthis.axios.get(this.api + \"/wx/getUser\").then(res => {\nif (res.data.statu == 1) {\n\nthis.user = res.data.user;\n} else {\nwindow.location = this.api + \"/wx/login?goback=businessman\";\n}\n});\nthis.axios.get(this.api + \"/wx/getAllHome\").then(res => {\nconsole.log(res);\nthis.allInfo = res.data;\n});\nthis.axios.get(this.api + \"/wx/getAllMoney\").then(res => {\nconsole.log(res);\nthis.allMoney = res.data;\n});\n},\nmethods: {\ndrawLine() {\n\nlet myChart = echarts.init(document.getElementById(\"myCharts\"));\n\nmyChart.setOption({\ntooltip: {\ntrigger: \"axis\"\n},\nlegend: {\ndata: [\"新注册用户\", \"新增订单\", \"新增管理员\"]\n},\ntextStyle: {\nfontFamily: \"Arial\",\nfontSize: \"14px\"\n},\ncalculable: true,\nxAxis: [\n{\ntype: \"category\",\nboundaryGap: false,\ndata: this.date\n}\n],\nyAxis: [\n{\ntype: \"value\"\n}\n],\nseries: [\n{\nname: \"新注册用户\",\ntype: \"line\",\nsmooth: true,\nstack: \"总量\",\ndata: [120, 132, 101, 134, 90, 230, 210],\nlabel: { show: true }\n},\n{\nname: \"新增订单\",\ntype: \"line\",\nsmooth: true,\nstack: \"总量\",\ndata: [220, 182, 191, 234, 290, 330, 310],\nlabel: { show: true }\n},\n{\nname: \"新增管理员\",\ntype: \"line\",\nsmooth: true,\nstack: \"总量\",\ndata: [150, 232, 201, 154, 190, 330, 410],\nlabel: { show: true }\n}\n]\n});\n}\n},\nmounted() {\nthis.drawLine();\n}\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/businessman.vue","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".weui-grids{position:relative;overflow:hidden}.weui-grids:before{right:0;height:1px;border-top:1px solid #d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-grids:after,.weui-grids:before{content:\\\" \\\";position:absolute;left:0;top:0;color:#d9d9d9}.weui-grids:after{width:1px;bottom:0;border-left:1px solid #d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleX(.5);transform:scaleX(.5)}.weui-grid{position:relative;float:left;padding:20px 10px;width:33.33333333%;box-sizing:border-box}.weui-grid:before{top:0;width:1px;border-right:1px solid #d9d9d9;-webkit-transform-origin:100% 0;transform-origin:100% 0;-webkit-transform:scaleX(.5);transform:scaleX(.5)}.weui-grid:after,.weui-grid:before{content:\\\" \\\";position:absolute;right:0;bottom:0;color:#d9d9d9}.weui-grid:after{left:0;height:1px;border-bottom:1px solid #d9d9d9;-webkit-transform-origin:0 100%;transform-origin:0 100%;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-grid:active{background-color:#ececec}.weui-grid__icon{width:28px;height:28px;margin:0 auto}.weui-grid__icon img{display:block;width:100%;height:100%}.weui-grid__icon+.weui-grid__label{margin-top:5px}.weui-grid__label{display:block;text-align:center;color:#000;font-size:14px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}\", \"\", {\"version\":3,\"sources\":[\"F:/Ropynn/备份/lvyun/node_modules/vux/src/components/grid/grid.vue\"],\"names\":[],\"mappings\":\"AA6GA,YACE,kBAAmB,AACnB,eAAiB,CAClB,AACD,mBAKE,QAAS,AACT,WAAY,AACZ,6BAA8B,AAE9B,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,oBAAuB,CAChC,AACD,qCAbE,YAAa,AACb,kBAAmB,AACnB,OAAQ,AACR,MAAO,AAIP,aAAe,CAmBhB,AAbD,kBAKE,UAAW,AACX,SAAU,AACV,8BAA+B,AAE/B,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,oBAAuB,CAChC,AACD,WACE,kBAAmB,AACnB,WAAY,AACZ,kBAAmB,AACnB,mBAAoB,AACpB,qBAAuB,CACxB,AACD,kBAIE,MAAO,AACP,UAAW,AAEX,+BAAgC,AAEhC,gCAAiC,AACzB,wBAAyB,AACjC,6BAA+B,AACvB,oBAAuB,CAChC,AACD,mCAbE,YAAa,AACb,kBAAmB,AACnB,QAAS,AAGT,SAAU,AAEV,aAAe,CAmBhB,AAbD,iBAGE,OAAQ,AAGR,WAAY,AACZ,gCAAiC,AAEjC,gCAAiC,AACzB,wBAAyB,AACjC,6BAA+B,AACvB,oBAAuB,CAChC,AACD,kBACE,wBAA0B,CAC3B,AACD,iBACE,WAAY,AACZ,YAAa,AACb,aAAe,CAChB,AACD,qBACE,cAAe,AACf,WAAY,AACZ,WAAa,CACd,AACD,mCACE,cAAgB,CACjB,AACD,kBACE,cAAe,AACf,kBAAmB,AACnB,WAAe,AACf,eAAgB,AAChB,mBAAoB,AACpB,uBAAwB,AACxB,eAAiB,CAClB\",\"file\":\"grid.vue\",\"sourcesContent\":[\"/**\\n* actionsheet\\n*/\\n/**\\n* datetime\\n*/\\n/**\\n* tabbar\\n*/\\n/**\\n* tab\\n*/\\n/**\\n* dialog\\n*/\\n/**\\n* x-number\\n*/\\n/**\\n* checkbox\\n*/\\n/**\\n* check-icon\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Mask\\n*/\\n/**\\n* Range\\n*/\\n/**\\n* Tabbar\\n*/\\n/**\\n* Header\\n*/\\n/**\\n* Timeline\\n*/\\n/**\\n* Switch\\n*/\\n/**\\n* Button\\n*/\\n/**\\n* swipeout\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Badge\\n*/\\n/**\\n* Popover\\n*/\\n/**\\n* Button tab\\n*/\\n/* alias */\\n/**\\n* Swiper\\n*/\\n/**\\n* checklist\\n*/\\n/**\\n* popup-picker\\n*/\\n/**\\n* popup\\n*/\\n/**\\n* popup-header\\n*/\\n/**\\n* form-preview\\n*/\\n/**\\n* sticky\\n*/\\n/**\\n* group\\n*/\\n/**\\n* toast\\n*/\\n/**\\n* icon\\n*/\\n/**\\n* calendar\\n*/\\n/**\\n* week-calendar\\n*/\\n/**\\n* search\\n*/\\n/**\\n* radio\\n*/\\n/**\\n* loadmore\\n*/\\n.weui-grids {\\n  position: relative;\\n  overflow: hidden;\\n}\\n.weui-grids:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  height: 1px;\\n  border-top: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-grids:after {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 1px;\\n  bottom: 0;\\n  border-left: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleX(0.5);\\n          transform: scaleX(0.5);\\n}\\n.weui-grid {\\n  position: relative;\\n  float: left;\\n  padding: 20px 10px;\\n  width: 33.33333333%;\\n  box-sizing: border-box;\\n}\\n.weui-grid:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  width: 1px;\\n  bottom: 0;\\n  border-right: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 100% 0;\\n          transform-origin: 100% 0;\\n  -webkit-transform: scaleX(0.5);\\n          transform: scaleX(0.5);\\n}\\n.weui-grid:after {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  height: 1px;\\n  border-bottom: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 100%;\\n          transform-origin: 0 100%;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-grid:active {\\n  background-color: #ECECEC;\\n}\\n.weui-grid__icon {\\n  width: 28px;\\n  height: 28px;\\n  margin: 0 auto;\\n}\\n.weui-grid__icon img {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n}\\n.weui-grid__icon + .weui-grid__label {\\n  margin-top: 5px;\\n}\\n.weui-grid__label {\\n  display: block;\\n  text-align: center;\\n  color: #000000;\\n  font-size: 14px;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-626f7f77\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vux-loader/src/after-less-loader.js!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vux/src/components/grid/grid.vue\n// module id = 418\n// module chunks = 0","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".weui-cell_access{-webkit-tap-highlight-color:rgba(0,0,0,0);color:inherit}.weui-cell_access:active{background-color:#ececec}.weui-cell_access .weui-cell__ft{padding-right:13px;position:relative}.weui-cell_access .weui-cell__ft:after{content:\\\" \\\";display:inline-block;height:6px;width:6px;border-width:2px 2px 0 0;border-color:#c8c8cd;border-style:solid;-webkit-transform:matrix(.71,.71,-.71,.71,0,0);transform:matrix(.71,.71,-.71,.71,0,0);position:relative;top:-2px;position:absolute;top:50%;margin-top:-4px;right:2px}.weui-cell_link{color:#586c94;font-size:14px}.weui-cell_link:first-child:before{display:block}.weui-cell_access.vux-cell-box{padding-right:13px;position:relative}.weui-cell_access.vux-cell-box:after{content:\\\" \\\";display:inline-block;height:6px;width:6px;border-width:2px 2px 0 0;border-color:#c8c8cd;border-style:solid;-webkit-transform:matrix(.71,.71,-.71,.71,0,0);transform:matrix(.71,.71,-.71,.71,0,0);position:relative;top:-2px;position:absolute;top:50%;margin-top:-4px;right:17px}.weui-cells{margin-top:1.17647059em;background-color:#fff;line-height:1.41176471;font-size:17px;overflow:hidden;position:relative}.weui-cells:before{top:0;border-top:1px solid #d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-cells:after,.weui-cells:before{content:\\\" \\\";position:absolute;left:0;right:0;height:1px;color:#d9d9d9}.weui-cells:after{bottom:0;border-bottom:1px solid #d9d9d9;-webkit-transform-origin:0 100%;transform-origin:0 100%;-webkit-transform:scaleY(.5);transform:scaleY(.5)}.weui-cells__title{margin-top:.77em;margin-bottom:.3em;padding-left:15px;padding-right:15px;color:#999;font-size:14px}.weui-cells__title+.weui-cells{margin-top:0}.weui-cells__tips{margin-top:.3em;color:#999;padding-left:15px;padding-right:15px;font-size:14px}.weui-cell{padding:10px 15px;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.weui-cell:before{content:\\\" \\\";position:absolute;left:0;top:0;right:0;height:1px;border-top:1px solid #d9d9d9;color:#d9d9d9;-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transform:scaleY(.5);transform:scaleY(.5);left:15px}.weui-cell:first-child:before{display:none}.weui-cell_primary{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.weui-cell__bd{-webkit-box-flex:1;-ms-flex:1;flex:1}.weui-cell__ft{text-align:right;color:#999}.vux-cell-justify{height:1.41176471em}.vux-cell-justify.vux-cell-justify:after{content:\\\".\\\";display:inline-block;width:100%;overflow:hidden;height:0}\", \"\", {\"version\":3,\"sources\":[\"F:/Ropynn/备份/lvyun/node_modules/vux/src/components/group-title/index.vue\"],\"names\":[],\"mappings\":\"AA6GA,kBACE,0CAA8C,AAC9C,aAAe,CAChB,AACD,yBACE,wBAA0B,CAC3B,AACD,iCACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,uCACE,YAAa,AACb,qBAAsB,AACtB,WAAY,AACZ,UAAW,AACX,yBAA0B,AAC1B,qBAAsB,AACtB,mBAAoB,AACpB,+CAAyD,AACjD,uCAAiD,AACzD,kBAAmB,AACnB,SAAU,AACV,kBAAmB,AACnB,QAAS,AACT,gBAAiB,AACjB,SAAW,CACZ,AACD,gBACE,cAAe,AACf,cAAgB,CACjB,AACD,mCACE,aAAe,CAChB,AACD,+BACE,mBAAoB,AACpB,iBAAmB,CACpB,AACD,qCACE,YAAa,AACb,qBAAsB,AACtB,WAAY,AACZ,UAAW,AACX,yBAA0B,AAC1B,qBAAsB,AACtB,mBAAoB,AACpB,+CAAyD,AACjD,uCAAiD,AACzD,kBAAmB,AACnB,SAAU,AACV,kBAAmB,AACnB,QAAS,AACT,gBAAiB,AACjB,UAAY,CACb,AACD,YACE,wBAAyB,AACzB,sBAA0B,AAC1B,uBAAwB,AACxB,eAAgB,AAChB,gBAAiB,AACjB,iBAAmB,CACpB,AACD,mBAIE,MAAO,AAGP,6BAA8B,AAE9B,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,oBAAuB,CAChC,AACD,qCAbE,YAAa,AACb,kBAAmB,AACnB,OAAQ,AAER,QAAS,AACT,WAAY,AAEZ,aAAe,CAmBhB,AAbD,kBAIE,SAAU,AAGV,gCAAiC,AAEjC,gCAAiC,AACzB,wBAAyB,AACjC,6BAA+B,AACvB,oBAAuB,CAChC,AACD,mBACE,iBAAmB,AACnB,mBAAqB,AACrB,kBAAmB,AACnB,mBAAoB,AACpB,WAAe,AACf,cAAgB,CACjB,AACD,+BACE,YAAc,CACf,AACD,kBACE,gBAAiB,AACjB,WAAe,AACf,kBAAmB,AACnB,mBAAoB,AACpB,cAAgB,CACjB,AACD,WACE,kBAAmB,AACnB,kBAAmB,AACnB,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,yBAA0B,AACtB,sBAAuB,AACnB,kBAAoB,CAC7B,AACD,kBACE,YAAa,AACb,kBAAmB,AACnB,OAAQ,AACR,MAAO,AACP,QAAS,AACT,WAAY,AACZ,6BAA8B,AAC9B,cAAe,AACf,6BAA8B,AACtB,qBAAsB,AAC9B,6BAA+B,AACvB,qBAAuB,AAC/B,SAAW,CACZ,AACD,8BACE,YAAc,CACf,AACD,mBACE,wBAAyB,AACrB,qBAAsB,AAClB,sBAAwB,CACjC,AACD,eACE,mBAAoB,AAChB,WAAY,AACR,MAAQ,CACjB,AACD,eACE,iBAAkB,AAClB,UAAe,CAChB,AACD,kBACE,mBAAqB,CACtB,AACD,yCACE,YAAa,AACb,qBAAsB,AACtB,WAAY,AACZ,gBAAiB,AACjB,QAAU,CACX\",\"file\":\"index.vue\",\"sourcesContent\":[\"/**\\n* actionsheet\\n*/\\n/**\\n* datetime\\n*/\\n/**\\n* tabbar\\n*/\\n/**\\n* tab\\n*/\\n/**\\n* dialog\\n*/\\n/**\\n* x-number\\n*/\\n/**\\n* checkbox\\n*/\\n/**\\n* check-icon\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Mask\\n*/\\n/**\\n* Range\\n*/\\n/**\\n* Tabbar\\n*/\\n/**\\n* Header\\n*/\\n/**\\n* Timeline\\n*/\\n/**\\n* Switch\\n*/\\n/**\\n* Button\\n*/\\n/**\\n* swipeout\\n*/\\n/**\\n* Cell\\n*/\\n/**\\n* Badge\\n*/\\n/**\\n* Popover\\n*/\\n/**\\n* Button tab\\n*/\\n/* alias */\\n/**\\n* Swiper\\n*/\\n/**\\n* checklist\\n*/\\n/**\\n* popup-picker\\n*/\\n/**\\n* popup\\n*/\\n/**\\n* popup-header\\n*/\\n/**\\n* form-preview\\n*/\\n/**\\n* sticky\\n*/\\n/**\\n* group\\n*/\\n/**\\n* toast\\n*/\\n/**\\n* icon\\n*/\\n/**\\n* calendar\\n*/\\n/**\\n* week-calendar\\n*/\\n/**\\n* search\\n*/\\n/**\\n* radio\\n*/\\n/**\\n* loadmore\\n*/\\n.weui-cell_access {\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n  color: inherit;\\n}\\n.weui-cell_access:active {\\n  background-color: #ECECEC;\\n}\\n.weui-cell_access .weui-cell__ft {\\n  padding-right: 13px;\\n  position: relative;\\n}\\n.weui-cell_access .weui-cell__ft:after {\\n  content: \\\" \\\";\\n  display: inline-block;\\n  height: 6px;\\n  width: 6px;\\n  border-width: 2px 2px 0 0;\\n  border-color: #C8C8CD;\\n  border-style: solid;\\n  -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n          transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n  position: relative;\\n  top: -2px;\\n  position: absolute;\\n  top: 50%;\\n  margin-top: -4px;\\n  right: 2px;\\n}\\n.weui-cell_link {\\n  color: #586C94;\\n  font-size: 14px;\\n}\\n.weui-cell_link:first-child:before {\\n  display: block;\\n}\\n.weui-cell_access.vux-cell-box {\\n  padding-right: 13px;\\n  position: relative;\\n}\\n.weui-cell_access.vux-cell-box:after {\\n  content: \\\" \\\";\\n  display: inline-block;\\n  height: 6px;\\n  width: 6px;\\n  border-width: 2px 2px 0 0;\\n  border-color: #C8C8CD;\\n  border-style: solid;\\n  -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n          transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);\\n  position: relative;\\n  top: -2px;\\n  position: absolute;\\n  top: 50%;\\n  margin-top: -4px;\\n  right: 17px;\\n}\\n.weui-cells {\\n  margin-top: 1.17647059em;\\n  background-color: #FFFFFF;\\n  line-height: 1.41176471;\\n  font-size: 17px;\\n  overflow: hidden;\\n  position: relative;\\n}\\n.weui-cells:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  height: 1px;\\n  border-top: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-cells:after {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  height: 1px;\\n  border-bottom: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 100%;\\n          transform-origin: 0 100%;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n}\\n.weui-cells__title {\\n  margin-top: 0.77em;\\n  margin-bottom: 0.3em;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  color: #999999;\\n  font-size: 14px;\\n}\\n.weui-cells__title + .weui-cells {\\n  margin-top: 0;\\n}\\n.weui-cells__tips {\\n  margin-top: .3em;\\n  color: #999999;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  font-size: 14px;\\n}\\n.weui-cell {\\n  padding: 10px 15px;\\n  position: relative;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n}\\n.weui-cell:before {\\n  content: \\\" \\\";\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  right: 0;\\n  height: 1px;\\n  border-top: 1px solid #D9D9D9;\\n  color: #D9D9D9;\\n  -webkit-transform-origin: 0 0;\\n          transform-origin: 0 0;\\n  -webkit-transform: scaleY(0.5);\\n          transform: scaleY(0.5);\\n  left: 15px;\\n}\\n.weui-cell:first-child:before {\\n  display: none;\\n}\\n.weui-cell_primary {\\n  -webkit-box-align: start;\\n      -ms-flex-align: start;\\n          align-items: flex-start;\\n}\\n.weui-cell__bd {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n}\\n.weui-cell__ft {\\n  text-align: right;\\n  color: #999999;\\n}\\n.vux-cell-justify {\\n  height: 1.41176471em;\\n}\\n.vux-cell-justify.vux-cell-justify:after {\\n  content: \\\".\\\";\\n  display: inline-block;\\n  width: 100%;\\n  overflow: hidden;\\n  height: 0;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-86ed57d6\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vux-loader/src/after-less-loader.js!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vux/src/components/group-title/index.vue\n// module id = 420\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".business[data-v-96fcf3be]{background-color:#ddd}.business header[data-v-96fcf3be]{background-color:#4b6eb7;padding:.266666666666667rem}.business .headimg[data-v-96fcf3be]{display:inline-block}.business .headimg img[data-v-96fcf3be]{height:1.333333333333333rem;vertical-align:middle}.business .uname[data-v-96fcf3be]{padding-left:.266666666666667rem;display:inline-block;font-size:14px;vertical-align:middle}.business .dec[data-v-96fcf3be]{text-align:center}.business .grid-center[data-v-96fcf3be]{display:block;text-align:center;color:#666;font-size:16px}.business .container[data-v-96fcf3be]{margin-top:.266666666666667rem;background-color:#fff;border:1px solid #ccc}.business .head[data-v-96fcf3be]{padding:.266666666666667rem;text-align:center}.business .command[data-v-96fcf3be]{background-color:#fff;margin-top:.266666666666667rem}.business #myCharts[data-v-96fcf3be]{width:100%;height:9.333333333333334rem;font-size:14px}\", \"\", {\"version\":3,\"sources\":[\"F:/Ropynn/备份/lvyun/src/components/businessman.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,qBAAuB,CACxB,AACD,kCACE,yBAA0B,AAC1B,2BAA8B,CAC/B,AACD,oCACE,oBAAsB,CACvB,AACD,wCACE,4BAA6B,AAC7B,qBAAuB,CACxB,AACD,kCACE,iCAAmC,AACnC,qBAAsB,AACtB,eAAgB,AAChB,qBAAuB,CACxB,AACD,gCACE,iBAAmB,CACpB,AACD,wCACE,cAAe,AACf,kBAAmB,AACnB,WAAY,AACZ,cAAgB,CACjB,AACD,sCACE,+BAAiC,AACjC,sBAAuB,AACvB,qBAAuB,CACxB,AACD,iCACE,4BAA8B,AAC9B,iBAAmB,CACpB,AACD,oCACE,sBAAuB,AACvB,8BAAiC,CAClC,AACD,qCACE,WAAY,AACZ,4BAA6B,AAC7B,cAAgB,CACjB\",\"file\":\"businessman.vue\",\"sourcesContent\":[\"\\n.business[data-v-96fcf3be] {\\n  background-color: #ddd;\\n}\\n.business header[data-v-96fcf3be] {\\n  background-color: #4b6eb7;\\n  padding: 0.266666666666667rem;\\n}\\n.business .headimg[data-v-96fcf3be] {\\n  display: inline-block;\\n}\\n.business .headimg img[data-v-96fcf3be] {\\n  height: 1.333333333333333rem;\\n  vertical-align: middle;\\n}\\n.business .uname[data-v-96fcf3be] {\\n  padding-left: 0.266666666666667rem;\\n  display: inline-block;\\n  font-size: 14px;\\n  vertical-align: middle;\\n}\\n.business .dec[data-v-96fcf3be] {\\n  text-align: center;\\n}\\n.business .grid-center[data-v-96fcf3be] {\\n  display: block;\\n  text-align: center;\\n  color: #666;\\n  font-size: 16px;\\n}\\n.business .container[data-v-96fcf3be] {\\n  margin-top: 0.266666666666667rem;\\n  background-color: #fff;\\n  border: 1px solid #ccc;\\n}\\n.business .head[data-v-96fcf3be] {\\n  padding: 0.266666666666667rem;\\n  text-align: center;\\n}\\n.business .command[data-v-96fcf3be] {\\n  background-color: #fff;\\n  margin-top: 0.266666666666667rem;\\n}\\n.business #myCharts[data-v-96fcf3be] {\\n  width: 100%;\\n  height: 9.333333333333334rem;\\n  font-size: 14px;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-96fcf3be\",\"scoped\":true,\"hasInlineConfig\":false}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/businessman.vue\n// module id = 421\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, isIgnore) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, isIgnore) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, isIgnore)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 424\n// module chunks = 0","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 425\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 426\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {origin: 'auto'},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 427\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @param {string} origin origin of areaStyle. Valid values: 'auto', 'start',\n *                        'end'.\n *                        auto: from axisLine to data\n *                        start: from min to data\n *                        end: from data to max\n * @private\n */\n\n\nfunction getStackedOnPoints(seriesModel, coordSys, data, origin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (origin === 'start') {\n    valueStart = extent[0];\n  } else if (origin === 'end') {\n    valueStart = extent[1];\n  } else {\n    // auto\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueCoordDim = valueAxis.dim;\n  var baseDataOffset = valueCoordDim === 'x' || valueCoordDim === 'radius' ? 1 : 0;\n  var valueDim = data.mapDimension(valueCoordDim);\n  return data.mapArray(valueDim ? [valueDim] : [], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var origin = areaStyleModel.get('origin');\n    var stackedOnPoints = getStackedOnPoints(seriesModel, coordSys, data, origin);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 428\n// module chunks = 0","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 429\n// module chunks = 0","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 430\n// module chunks = 0","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 431\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 432\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 433\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 434\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 435\n// module chunks = 0","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 436\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 437\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 438\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 439\n// module chunks = 0","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 440\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 441\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar DEFAULT_COMPONENT_NAME = _model.DEFAULT_COMPONENT_NAME;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var potentialSeriesName;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          potentialSeriesName = seriesName;\n        }\n      } else {\n        potentialSeriesName = seriesName;\n      }\n\n      if (potentialSeriesName && potentialSeriesName !== DEFAULT_COMPONENT_NAME) {\n        potentialData.push(potentialSeriesName);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 442\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 443\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 444\n// module chunks = 0","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 445\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 446\n// module chunks = 0","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 447\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 448\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 449\n// module chunks = 0","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 450\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 451\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 452\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 453\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 454\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 455\n// module chunks = 0","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 456\n// module chunks = 0","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 457\n// module chunks = 0","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/Region.js\n// module id = 458\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 459\n// module chunks = 0","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 460\n// module chunks = 0","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/export.js\n// module id = 461\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 462\n// module chunks = 0","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/lang.js\n// module id = 463\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [data.mapDimension('x'), data.mapDimension('y')];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(data.mapDimension(valueAxis.dim), function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 464\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.getDimension(data.mapDimension(dim));\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 465\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 466\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 467\n// module chunks = 0","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 468\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 469\n// module chunks = 0","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 470\n// module chunks = 0","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/dataFormat.js\n// module id = 471\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 472\n// module chunks = 0","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 473\n// module chunks = 0","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 474\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 475\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(labelOpt) {\n  var textStyle = isObject(labelOpt) && labelOpt.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOpt[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt.label);\n    opt.emphasis && compatTextStyle(opt.emphasis.label);\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt.label); // treemap\n\n  compatTextStyle(seriesOpt.upperLabel); // graph\n\n  compatTextStyle(seriesOpt.edgeLabel);\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis.label); // treemap\n\n    compatTextStyle(seriesOpt.emphasis.upperLabel); // graph\n\n    compatTextStyle(seriesOpt.emphasis.edgeLabel);\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    convertNormalEmphasis(timelineOpt, 'checkpointStyle');\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 476\n// module chunks = 0","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 477\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 478\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 479\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 480\n// module chunks = 0","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished;\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.incrementalRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count();\n  var incrementalRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    incrementalRender: incrementalRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function (stageHandlers, useClearVisual) {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(stageHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (stageHandlers, ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, stageHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (stageHandlers, ecModel, payload, opt) {\n  performStageTasks(this, stageHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/stream/Scheduler.js\n// module id = 481\n// module chunks = 0","var contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/theme/dark.js\n// module id = 482\n// module chunks = 0","var colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/theme/light.js\n// module id = 483\n// module chunks = 0","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 484\n// module chunks = 0","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/aria.js\n// module id = 485\n// module chunks = 0","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.get('name'), null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 486\n// module chunks = 0","function _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 487\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-626f7f77\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../vux-loader/src/after-less-loader.js!../../../../less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../vux-loader/src/style-loader.js!../../../../vue-loader/lib/selector.js?type=styles&index=0!./grid.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../vue-style-loader/lib/addStylesClient.js\")(\"51465f56\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-626f7f77\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vux-loader/src/after-less-loader.js!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vux/src/components/grid/grid.vue\n// module id = 497\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-86ed57d6\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../vux-loader/src/after-less-loader.js!../../../../less-loader/dist/cjs.js?{\\\"sourceMap\\\":true}!../../../../vux-loader/src/style-loader.js!../../../../vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../vue-style-loader/lib/addStylesClient.js\")(\"64d4737d\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-86ed57d6\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vux-loader/src/after-less-loader.js!./~/less-loader/dist/cjs.js?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vux/src/components/group-title/index.vue\n// module id = 499\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-96fcf3be\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../node_modules/vux-loader/src/style-loader.js!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./businessman.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"508f4739\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-96fcf3be\",\"scoped\":true,\"hasInlineConfig\":false}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/businessman.vue\n// module id = 500\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('a', {\n    staticClass: \"weui-grid\",\n    style: (_vm.style),\n    attrs: {\n      \"href\": \"javascript:;\"\n    },\n    on: {\n      \"click\": _vm.onClick\n    }\n  }, [(_vm.hasIconSlot || _vm.icon) ? _c('div', {\n    staticClass: \"weui-grid__icon\"\n  }, [_vm._t(\"icon\", [_c('img', {\n    attrs: {\n      \"src\": _vm.icon,\n      \"alt\": \"\"\n    }\n  })])], 2) : _vm._e(), _vm._v(\" \"), (_vm.hasLabelSlot || _vm.label) ? _c('p', {\n    staticClass: \"weui-grid__label\"\n  }, [_vm._t(\"label\", [_c('span', {\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.label)\n    }\n  })])], 2) : _vm._e(), _vm._v(\" \"), _vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-43f555d9\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vux/src/components/grid/grid-item.vue\n// module id = 513\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"weui-grids\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-626f7f77\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vux/src/components/grid/grid.vue\n// module id = 519\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"weui-cells__title\"\n  }, [_vm._t(\"default\")], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-86ed57d6\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vux/src/components/group-title/index.vue\n// module id = 521\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"business\"\n  }, [_c('header', [_c('div', {\n    staticClass: \"headimg\"\n  }, [_c('img', {\n    attrs: {\n      \"src\": _vm.user.headimgurl\n    }\n  })]), _vm._v(\" \"), _c('div', {\n    staticClass: \"uname\"\n  }, [_c('div', [_vm._v(_vm._s(_vm.user.nickname))]), _vm._v(\" \"), _c('div', [_vm._v(\"普通会员\")])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"today container\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"当日数据\")]), _vm._v(\" \"), _c('grid', {\n    attrs: {\n      \"cols\": 3\n    }\n  }, [_c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"新增用户\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.nPerson))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"新增订单\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.nOrder))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"新增管理员\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.nAdminer))])])], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"all container\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"总数据\")]), _vm._v(\" \"), _c('grid', {\n    attrs: {\n      \"cols\": 3\n    }\n  }, [_c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"注册用户\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.aPerson))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"订单\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.aOrder))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"管理员\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allInfo.aAdminer))])])], 1)], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"all_money container\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"总收入（元）\")]), _vm._v(\" \"), _c('grid', {\n    attrs: {\n      \"cols\": _vm.col\n    }\n  }, [_c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"投资人收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.investo / 100 || 0))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"合伙人收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.partner / 100 || 0))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"店家收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.owner / 100 || 0))])]), _vm._v(\" \"), _c('grid-item', [_c('div', {\n    staticClass: \"dec\"\n  }, [_vm._v(\"平台收益\")]), _vm._v(\" \"), _c('span', {\n    staticClass: \"grid-center\"\n  }, [_vm._v(_vm._s(_vm.allMoney.platform / 100 || 0))])])], 1)], 1), _vm._v(\" \"), _vm._m(0)])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"command\"\n  }, [_c('div', {\n    staticClass: \"head\"\n  }, [_vm._v(\"走势图\")]), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"myCharts\"\n    }\n  })])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-96fcf3be\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/businessman.vue\n// module id = 522\n// module chunks = 0","var Component = require(\"!../../../../vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../vux-loader/src/script-loader.js!../../../../vue-loader/lib/selector?type=script&index=0!./grid-item.vue\"),\n  /* template */\n  require(\"!!../../../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-43f555d9\\\"}!../../../../vux-loader/src/before-template-compiler-loader.js!../../../../vux-loader/src/template-loader.js!../../../../vue-loader/lib/selector?type=template&index=0!./grid-item.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vux/src/components/grid/grid-item.vue\n// module id = 526\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-626f7f77\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../vux-loader/src/after-less-loader.js!less-loader?{\\\"sourceMap\\\":true}!../../../../vux-loader/src/style-loader.js!../../../../vue-loader/lib/selector?type=styles&index=0!./grid.vue\")\n\nvar Component = require(\"!../../../../vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../vux-loader/src/script-loader.js!../../../../vue-loader/lib/selector?type=script&index=0!./grid.vue\"),\n  /* template */\n  require(\"!!../../../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-626f7f77\\\"}!../../../../vux-loader/src/before-template-compiler-loader.js!../../../../vux-loader/src/template-loader.js!../../../../vue-loader/lib/selector?type=template&index=0!./grid.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vux/src/components/grid/grid.vue\n// module id = 527\n// module chunks = 0","\n/* styles */\nrequire(\"!!../../../../extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-86ed57d6\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../vux-loader/src/after-less-loader.js!less-loader?{\\\"sourceMap\\\":true}!../../../../vux-loader/src/style-loader.js!../../../../vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../../vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../vux-loader/src/script-loader.js!../../../../vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-86ed57d6\\\"}!../../../../vux-loader/src/before-template-compiler-loader.js!../../../../vux-loader/src/template-loader.js!../../../../vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vux/src/components/group-title/index.vue\n// module id = 528\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 531\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 532\n// module chunks = 0","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now(); // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear();\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear();\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 533\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 534\n// module chunks = 0","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // Frame should before stage update. Upper application\n    // depends on the sequence (e.g., echarts-stream)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 535\n// module chunks = 0","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 536\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 537\n// module chunks = 0","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 538\n// module chunks = 0","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 539\n// module chunks = 0","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 540\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 541\n// module chunks = 0","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/polygon.js\n// module id = 542\n// module chunks = 0","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 543\n// module chunks = 0","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 544\n// module chunks = 0","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 545\n// module chunks = 0","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 546\n// module chunks = 0","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/IncrementalDisplayable.js\n// module id = 547\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 548\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 549\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 550\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 551\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 552\n// module chunks = 0","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 553\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 554\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 555\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 556\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 557\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 558\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 559\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 560\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 561\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 562\n// module chunks = 0","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 563\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 564\n// module chunks = 0","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 565\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 566\n// module chunks = 0"],"sourceRoot":""}